(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{"K+Fg":function(t,e,a){"use strict";a.r(e),a.d(e,"_frontmatter",(function(){return y})),a.d(e,"default",(function(){return f}));var n=a("Fcif"),b=(a("tgoD"),a("TRAS")),r=(a("lAlM"),a("DSjH")),l=(a("6ySo"),a("HNSN")),c=(a("wl/M"),a("DrYe")),d=(a("5Kj1"),a("P5ky")),i=(a("iHNd"),a("iGsx")),o=a("+I+c"),u=(a("4oeK"),a("mXGw"),a("/FXl")),m=a("TjRS"),p=a("xARA"),j=a.n(p),O=a("ZFoC"),N=a("USb2"),g=a("c8Qs"),s=(a("aD51"),["components"]),y={};void 0!==y&&y&&y===Object(y)&&Object.isExtensible(y)&&!Object.prototype.hasOwnProperty.call(y,"__filemeta")&&Object.defineProperty(y,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"components/layout/index.mdx"}});var h={_frontmatter:y},R=m.a;function f(t){var e,a,p,f=t.components,v=Object(o.a)(t,s);return Object(u.b)(R,Object(n.a)({},h,v,{components:f,mdxType:"MDXLayout"}),Object(u.b)("h1",{id:"layout-布局"},"Layout 布局"),Object(u.b)("p",null,"协助进行页面级整体布局。"),Object(u.b)("h1",{id:"交互"},"交互"),Object(u.b)("p",null,"页面分成左右两部分，分别是左边菜单和右边内容\n滚动范围：内容除去 header 部分（包括 footer）"),Object(u.b)("h3",{id:"自适应"},"自适应："),Object(u.b)("h4",{id:"内容"},"内容："),Object(u.b)("p",null,"页面最小宽度为 1032px，内容最小为 1032 - 64 = 968px，大于 968px 时 100%平铺"),Object(u.b)("h4",{id:"菜单"},"菜单："),Object(u.b)("ol",null,Object(u.b)("li",{parentName:"ol"},"页面在 1032-1208px 之间时，主子菜单均收起，展开时不挤压内容区域"),Object(u.b)("li",{parentName:"ol"},"页面在 1208px-1440px 之间时，主菜单收起，子菜单不收起"),Object(u.b)("li",{parentName:"ol"},"大于 1440px 时，主菜单展开，子菜单展开")),Object(u.b)("h2",{id:"基本用法此-demo-中-sidebar-自适应监听对象为当前浏览器宽度"},"基本用法（此 demo 中 Sidebar 自适应监听对象为当前浏览器宽度）"),Object(u.b)(O.c,{__position:0,__code:"<div style={{ width: 1000, height: 1200, background: '#ccc' }}>\n  <HashRouter>\n    <Layout\n      sidebar={\n        <Sidebar\n          mainMenus={mainMenus}\n          subMenus={subMenus}\n          resourse={<div>Resourse</div>}\n          team={<div>Team</div>}\n        />\n      }\n      header={\n        <div style={{ height: 64, width: '100%', background: '#ff0' }}>\n          header\n        </div>\n      }\n      footer={\n        <div style={{ height: 48, width: '100%', background: '#0f0' }}>\n          footer\n        </div>\n      }\n    >\n      <div style={{ height: 2000, width: 30, background: '00f' }}>\n        <div\n          onClick={() => {\n            Layout.useGlobalDrawer().initTab({\n              name: 'instanceName',\n              type: 'instance',\n              id: 'instanceId',\n              component: (\n                <div>\n                  <Button\n                    onClick={() => {\n                      Layout.useGlobalDrawer().addTab({\n                        name: 'networkName',\n                        id: 'networkId',\n                        type: 'network',\n                        component: (\n                          <div>\n                            <Button\n                              onClick={() => {\n                                Layout.useGlobalDrawer().addTab({\n                                  name: 'vmName',\n                                  id: 'vmId',\n                                  type: 'vm',\n                                  component: (\n                                    <div>\n                                      <Button\n                                        onClick={() => {\n                                          Layout.useGlobalDrawer().addTab({\n                                            name: 'networkName2',\n                                            id: 'networkId2',\n                                            type: 'network',\n                                            component: (\n                                              <div>\n                                                <Button onClick={() => {}}>\n                                                  add tab\n                                                </Button>\n                                              </div>\n                                            ),\n                                            render: ReactDom.render,\n                                          })\n                                        }}\n                                      >\n                                        add network\n                                      </Button>\n                                    </div>\n                                  ),\n                                  render: ReactDom.render,\n                                })\n                              }}\n                            >\n                              add vm\n                            </Button>\n                          </div>\n                        ),\n                        render: ReactDom.render,\n                      })\n                    }}\n                  >\n                    add network\n                  </Button>\n                </div>\n              ),\n              render: ReactDom.render,\n            })\n          }}\n        >\n          点击查看详情\n        </div>\n      </div>\n    </Layout>\n  </HashRouter>\n</div>",__scope:(e={props:v,DefaultLayout:m.a,ReactDom:j.a,Playground:O.c,Props:O.d,Layout:i.a,Sidebar:d.a,Button:c.a,Icon:l.a,SuperSearch:r.a,Table:b.a,HashRouter:N.b,BrowserRouter:N.a,mainMenus:g.a,subMenus:g.b},e.DefaultLayout=m.a,e._frontmatter=y,e),mdxType:"Playground"},Object(u.b)("div",{style:{width:1e3,height:1200,background:"#ccc"}},Object(u.b)(N.b,{mdxType:"HashRouter"},Object(u.b)(i.a,{sidebar:Object(u.b)(d.a,{mainMenus:g.a,subMenus:g.b,resourse:Object(u.b)("div",null,"Resourse"),team:Object(u.b)("div",null,"Team"),mdxType:"Sidebar"}),header:Object(u.b)("div",{style:{height:64,width:"100%",background:"#ff0"}},"header"),footer:Object(u.b)("div",{style:{height:48,width:"100%",background:"#0f0"}},"footer"),mdxType:"Layout"},Object(u.b)("div",{style:{height:2e3,width:30,background:"00f"}},Object(u.b)("div",{onClick:function(){i.a.useGlobalDrawer().initTab({name:"instanceName",type:"instance",id:"instanceId",component:Object(u.b)("div",null,Object(u.b)(c.a,{onClick:function(){i.a.useGlobalDrawer().addTab({name:"networkName",id:"networkId",type:"network",component:Object(u.b)("div",null,Object(u.b)(c.a,{onClick:function(){i.a.useGlobalDrawer().addTab({name:"vmName",id:"vmId",type:"vm",component:Object(u.b)("div",null,Object(u.b)(c.a,{onClick:function(){i.a.useGlobalDrawer().addTab({name:"networkName2",id:"networkId2",type:"network",component:Object(u.b)("div",null,Object(u.b)(c.a,{onClick:function(){},mdxType:"Button"},"add tab")),render:j.a.render})},mdxType:"Button"},"add network")),render:j.a.render})},mdxType:"Button"},"add vm")),render:j.a.render})},mdxType:"Button"},"add network")),render:j.a.render})}},"点击查看详情")))))),Object(u.b)("h1",{id:"basiclayout"},"BasicLayout"),Object(u.b)(O.c,{__position:1,__code:'<Layout.BasicLayout title="小鸡炖蘑菇" onBack={() => {}}>\n  123\n</Layout.BasicLayout>',__scope:(a={props:v,DefaultLayout:m.a,ReactDom:j.a,Playground:O.c,Props:O.d,Layout:i.a,Sidebar:d.a,Button:c.a,Icon:l.a,SuperSearch:r.a,Table:b.a,HashRouter:N.b,BrowserRouter:N.a,mainMenus:g.a,subMenus:g.b},a.DefaultLayout=m.a,a._frontmatter=y,a),mdxType:"Playground"},Object(u.b)(i.a.BasicLayout,{title:"小鸡炖蘑菇",onBack:function(){}},"123")),Object(u.b)("h1",{id:"listlayout"},"ListLayout"),Object(u.b)(O.c,{__position:2,__code:'<Layout.ListLayout\n  title="小鸡炖蘑菇"\n  subtitle="教你如何做小鸡炖蘑菇"\n  extra={\n    <Button size="s" icon={<Icon type="suggest/Add" />}>\n      Add\n    </Button>\n  }\n  search={<SuperSearch configuration={[]} />}\n  action={<Button size="s">下载</Button>}\n>\n  <Table rowKey="key" columns={[]} dataSource={[]} />\n</Layout.ListLayout>',__scope:(p={props:v,DefaultLayout:m.a,ReactDom:j.a,Playground:O.c,Props:O.d,Layout:i.a,Sidebar:d.a,Button:c.a,Icon:l.a,SuperSearch:r.a,Table:b.a,HashRouter:N.b,BrowserRouter:N.a,mainMenus:g.a,subMenus:g.b},p.DefaultLayout=m.a,p._frontmatter=y,p),mdxType:"Playground"},Object(u.b)(i.a.ListLayout,{title:"小鸡炖蘑菇",subtitle:"教你如何做小鸡炖蘑菇",extra:Object(u.b)(c.a,{size:"s",icon:Object(u.b)(l.a,{type:"suggest/Add",mdxType:"Icon"}),mdxType:"Button"},"Add"),search:Object(u.b)(r.a,{configuration:[],mdxType:"SuperSearch"}),action:Object(u.b)(c.a,{size:"s",mdxType:"Button"},"下载")},Object(u.b)(b.a,{rowKey:"key",columns:[],dataSource:[],mdxType:"Table"}))),Object(u.b)("h2",{id:"api"},"API"),Object(u.b)("h3",{id:"layout"},"Layout"),Object(u.b)("table",null,Object(u.b)("thead",{parentName:"table"},Object(u.b)("tr",{parentName:"thead"},Object(u.b)("th",{parentName:"tr",align:null},"属性"),Object(u.b)("th",{parentName:"tr",align:null},"说明"),Object(u.b)("th",{parentName:"tr",align:null},"类型"),Object(u.b)("th",{parentName:"tr",align:null},"默认值"))),Object(u.b)("tbody",{parentName:"table"},Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"header"),Object(u.b)("td",{parentName:"tr",align:null},"Header 组件"),Object(u.b)("td",{parentName:"tr",align:null},"React.ReactElement"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"sidebar"),Object(u.b)("td",{parentName:"tr",align:null},"Sidebar 组件"),Object(u.b)("td",{parentName:"tr",align:null},"React.ReactElement"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"footer"),Object(u.b)("td",{parentName:"tr",align:null},"Footer 组件"),Object(u.b)("td",{parentName:"tr",align:null},"React.ReactElement"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"className"),Object(u.b)("td",{parentName:"tr",align:null},"自定义 CSS className"),Object(u.b)("td",{parentName:"tr",align:null},"string"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"style"),Object(u.b)("td",{parentName:"tr",align:null},"自定义内联样式"),Object(u.b)("td",{parentName:"tr",align:null},"CSSProperties"),Object(u.b)("td",{parentName:"tr",align:null},"-")))),Object(u.b)("h3",{id:"layoutbasiclayoutheader-和-layoutbasiclayout"},"Layout.BasicLayoutHeader 和 Layout.BasicLayout"),Object(u.b)("table",null,Object(u.b)("thead",{parentName:"table"},Object(u.b)("tr",{parentName:"thead"},Object(u.b)("th",{parentName:"tr",align:null},"属性"),Object(u.b)("th",{parentName:"tr",align:null},"说明"),Object(u.b)("th",{parentName:"tr",align:null},"类型"),Object(u.b)("th",{parentName:"tr",align:null},"默认值"))),Object(u.b)("tbody",{parentName:"table"},Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"title"),Object(u.b)("td",{parentName:"tr",align:null},"标题"),Object(u.b)("td",{parentName:"tr",align:null},"React.ReactNode"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"subtitle"),Object(u.b)("td",{parentName:"tr",align:null},"副标题"),Object(u.b)("td",{parentName:"tr",align:null},"React.ReactNode"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"extra"),Object(u.b)("td",{parentName:"tr",align:null},"标题右侧区域"),Object(u.b)("td",{parentName:"tr",align:null},"React.ReactNode"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"onBack"),Object(u.b)("td",{parentName:"tr",align:null},"返回按钮点击回调，不传就不显示按钮"),Object(u.b)("td",{parentName:"tr",align:null},"() => void"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"className"),Object(u.b)("td",{parentName:"tr",align:null},"自定义 CSS className"),Object(u.b)("td",{parentName:"tr",align:null},"string"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"style"),Object(u.b)("td",{parentName:"tr",align:null},"自定义内联样式"),Object(u.b)("td",{parentName:"tr",align:null},"CSSProperties"),Object(u.b)("td",{parentName:"tr",align:null},"-")))),Object(u.b)("h3",{id:"layoutfixbarlayout"},"Layout.FixbarLayout"),Object(u.b)("table",null,Object(u.b)("thead",{parentName:"table"},Object(u.b)("tr",{parentName:"thead"},Object(u.b)("th",{parentName:"tr",align:null},"属性"),Object(u.b)("th",{parentName:"tr",align:null},"说明"),Object(u.b)("th",{parentName:"tr",align:null},"类型"),Object(u.b)("th",{parentName:"tr",align:null},"默认值"))),Object(u.b)("tbody",{parentName:"table"},Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"title"),Object(u.b)("td",{parentName:"tr",align:null},"标题"),Object(u.b)("td",{parentName:"tr",align:null},"React.ReactNode"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"subtitle"),Object(u.b)("td",{parentName:"tr",align:null},"副标题"),Object(u.b)("td",{parentName:"tr",align:null},"React.ReactNode"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"extra"),Object(u.b)("td",{parentName:"tr",align:null},"标题右侧区域"),Object(u.b)("td",{parentName:"tr",align:null},"React.ReactNode"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"onBack"),Object(u.b)("td",{parentName:"tr",align:null},"返回按钮点击回调，不传就不显示按钮"),Object(u.b)("td",{parentName:"tr",align:null},"() => void"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"fixbar"),Object(u.b)("td",{parentName:"tr",align:null},"底部固定栏"),Object(u.b)("td",{parentName:"tr",align:null},"React.ReactNode"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"className"),Object(u.b)("td",{parentName:"tr",align:null},"自定义 CSS className"),Object(u.b)("td",{parentName:"tr",align:null},"string"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"style"),Object(u.b)("td",{parentName:"tr",align:null},"自定义内联样式"),Object(u.b)("td",{parentName:"tr",align:null},"CSSProperties"),Object(u.b)("td",{parentName:"tr",align:null},"-")))),Object(u.b)("h3",{id:"layoutlistlayoutbody"},"Layout.ListLayoutBody"),Object(u.b)("table",null,Object(u.b)("thead",{parentName:"table"},Object(u.b)("tr",{parentName:"thead"},Object(u.b)("th",{parentName:"tr",align:null},"属性"),Object(u.b)("th",{parentName:"tr",align:null},"说明"),Object(u.b)("th",{parentName:"tr",align:null},"类型"),Object(u.b)("th",{parentName:"tr",align:null},"默认值"))),Object(u.b)("tbody",{parentName:"table"},Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"search"),Object(u.b)("td",{parentName:"tr",align:null},"搜索栏"),Object(u.b)("td",{parentName:"tr",align:null},"React.ReactNode"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"information"),Object(u.b)("td",{parentName:"tr",align:null},"信息展示栏"),Object(u.b)("td",{parentName:"tr",align:null},"React.ReactNode"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"action"),Object(u.b)("td",{parentName:"tr",align:null},"table 右上方操作区"),Object(u.b)("td",{parentName:"tr",align:null},"React.ReactNode"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"pagination"),Object(u.b)("td",{parentName:"tr",align:null},"分页组件"),Object(u.b)("td",{parentName:"tr",align:null},"PaginationProps"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"total"),Object(u.b)("td",{parentName:"tr",align:null},"总条数"),Object(u.b)("td",{parentName:"tr",align:null},"number"),Object(u.b)("td",{parentName:"tr",align:null},"-")))),Object(u.b)("h3",{id:"layoutlistlayout"},"Layout.ListLayout"),Object(u.b)("table",null,Object(u.b)("thead",{parentName:"table"},Object(u.b)("tr",{parentName:"thead"},Object(u.b)("th",{parentName:"tr",align:null},"属性"),Object(u.b)("th",{parentName:"tr",align:null},"说明"),Object(u.b)("th",{parentName:"tr",align:null},"类型"),Object(u.b)("th",{parentName:"tr",align:null},"默认值"))),Object(u.b)("tbody",{parentName:"table"},Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"title"),Object(u.b)("td",{parentName:"tr",align:null},"标题"),Object(u.b)("td",{parentName:"tr",align:null},"React.ReactNode"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"subtitle"),Object(u.b)("td",{parentName:"tr",align:null},"副标题"),Object(u.b)("td",{parentName:"tr",align:null},"React.ReactNode"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"extra"),Object(u.b)("td",{parentName:"tr",align:null},"标题右侧区域"),Object(u.b)("td",{parentName:"tr",align:null},"React.ReactNode"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"onBack"),Object(u.b)("td",{parentName:"tr",align:null},"返回按钮点击回调，不传就不显示按钮"),Object(u.b)("td",{parentName:"tr",align:null},"() => void"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"className"),Object(u.b)("td",{parentName:"tr",align:null},"自定义 CSS className"),Object(u.b)("td",{parentName:"tr",align:null},"string"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"search"),Object(u.b)("td",{parentName:"tr",align:null},"搜索栏"),Object(u.b)("td",{parentName:"tr",align:null},"React.ReactNode"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"information"),Object(u.b)("td",{parentName:"tr",align:null},"信息展示栏"),Object(u.b)("td",{parentName:"tr",align:null},"React.ReactNode"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"action"),Object(u.b)("td",{parentName:"tr",align:null},"table 右上方操作区"),Object(u.b)("td",{parentName:"tr",align:null},"React.ReactNode"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"pagination"),Object(u.b)("td",{parentName:"tr",align:null},"分页组件"),Object(u.b)("td",{parentName:"tr",align:null},"PaginationProps"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"total"),Object(u.b)("td",{parentName:"tr",align:null},"总条数"),Object(u.b)("td",{parentName:"tr",align:null},"number"),Object(u.b)("td",{parentName:"tr",align:null},"-")),Object(u.b)("tr",{parentName:"tbody"},Object(u.b)("td",{parentName:"tr",align:null},"style"),Object(u.b)("td",{parentName:"tr",align:null},"自定义内联样式"),Object(u.b)("td",{parentName:"tr",align:null},"CSSProperties"),Object(u.b)("td",{parentName:"tr",align:null},"-")))),Object(u.b)("h3",{id:"globaldrawer"},"GlobalDrawer"),Object(u.b)("h4",{id:"interface"},"interface"),Object(u.b)("pre",null,Object(u.b)("code",{parentName:"pre"},"  interface GlobalDrawerConfigItem {\n    name: string;\n    id?: string;\n    type: string;\n    icon?: React.ReactElement;\n    component: React.ReactElement;\n    render?: Renderer;\n    active?: boolean;\n    onClose?:()=>void\n  }\n  interface Window {\n    _ZEND_globalDrawer: {\n        config: GlobalDrawerConfigItem[];\n        getTabs: () => GlobalDrawerConfigItem[];\n        setTabs: (tabs: GlobalDrawerConfigItem[]) => void;\n        initTab: (tab: GlobalDrawerConfigItem) => void;\n        addTab: (tab: GlobalDrawerConfigItem) => void;\n        removeTab: (key: string) => void;\n        removeTabs: () => void;\n    };\n  }\n")),Object(u.b)("h4",{id:"使用"},"使用"),Object(u.b)("pre",null,Object(u.b)("code",{parentName:"pre"},"  const globalDrawer = Layout.useGlobalDrawer();\n  globalDrawer.addTab({\n      name: 'test',\n      icon:<Icon type=\"product/CDN\" />,\n      component: <div>testtest</div>,//获取router或者context需要使用参数传进去，因为addTab使用了ReactDom.render直接挂在到dom上。\n      render: ReactDom.render,\n  });\n\n  // 或者\n  window._ZEND_globalDrawer.addTab({\n      name: 'test',\n      icon:<Icon type=\"product/CDN\" />,\n      component: <div>testtest</div>,//获取router或者context需要使用参数传进去，因为addTab使用了ReactDom.render直接挂在到dom上。\n      render: ReactDom.render,\n  });\n")))}void 0!==f&&f&&f===Object(f)&&Object.isExtensible(f)&&!Object.prototype.hasOwnProperty.call(f,"__filemeta")&&Object.defineProperty(f,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"components/layout/index.mdx"}}),f.isMDXComponent=!0}}]);
//# sourceMappingURL=component---components-layout-index-mdx-1cdbbfa4ec0cf6fc1bdf.js.map