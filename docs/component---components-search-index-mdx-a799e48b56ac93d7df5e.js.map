{"version":3,"sources":["webpack:///../components/search/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Search","Icon","HashRouter","React","tags","searchObj","setSearchObj","defaultValue","defaultSearch","key","value","regex","config","type","option","label","statusColor","mode","icon","onSearch","query","console","log","isMDXComponent"],"mappings":"yWAWaA,EAAe,Q,6MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,aADR,aAGA,kBACE,GAAM,QADR,QAGA,sBACE,kBAAIC,WAAW,MAAf,WACA,kBAAIA,WAAW,MAAf,mBAEF,kBACE,GAAM,QADR,QAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,2oFAA0vFC,SAAO,GAClyFL,QACAH,kBACAS,eACAC,UACAC,OAAM,UACNC,KAAI,IACJC,gBAPkyF,gBAQlyFb,IARkyF,EASlyFH,eATkyF,GAUjyFO,QAAQ,eACZ,WACK,MAAkCU,WAAe,CAC/CC,KAAM,gBADDC,EAAP,KAAkBC,EAAlB,KAGA,OAAO,YAAC,IAAD,CAAYb,QAAQ,cAC3B,uBAAQc,aAAc,CAClBH,KAAM,eACLI,cAAe,CAAC,CACjBC,IAAK,KACLC,MAAO,OACPC,MAAO,+DACN,CACDF,IAAK,WACLC,MAAO,WACPC,MAAO,WACLC,OAAQ,CAAC,CACXH,IAAK,KACLC,MAAO,QACN,CACDD,IAAK,WACLC,MAAO,YACN,CACDD,IAAK,KACLC,MAAO,MACN,CACDD,IAAK,OACLC,MAAO,OACPG,KAAM,SACNC,OAAQ,CAAC,CACPC,MAAO,MACPL,MAAO,QACPM,YAAa,OACZ,CACDD,MAAO,MACPL,MAAO,QACPM,YAAa,SACZ,CACDD,MAAO,MACPL,MAAO,QACPM,YAAa,UACZ,CACDD,MAAO,MACPL,MAAO,QACPM,YAAa,OACZ,CACDD,MAAO,MACPL,MAAO,QACPM,YAAa,OACZ,CACDD,MAAO,MACPL,MAAO,QACPM,YAAa,QAEfC,KAAM,UACL,CACDR,IAAK,OACLC,MAAO,OACPG,KAAM,OACNC,OAAQ,CAAC,CACPC,MAAO,MACPL,MAAO,QACPQ,KAAM,iBAAML,KAAK,sBAAsBpB,QAAQ,UAC9C,CACDsB,MAAO,MACPL,MAAO,QACPQ,KAAM,iBAAML,KAAK,sBAAsBpB,QAAQ,UAC9C,CACDsB,MAAO,MACPL,MAAO,QACPQ,KAAM,iBAAML,KAAK,sBAAsBpB,QAAQ,UAC9C,CACDsB,MAAO,MACPL,MAAO,QACPQ,KAAM,iBAAML,KAAK,sBAAsBpB,QAAQ,UAC9C,CACDsB,MAAO,MACPL,MAAO,QACPQ,KAAM,iBAAML,KAAK,sBAAsBpB,QAAQ,UAC9C,CACDsB,MAAO,MACPL,MAAO,QACPQ,KAAM,iBAAML,KAAK,sBAAsBpB,QAAQ,WAEjDwB,KAAM,YACL,CACDR,IAAK,WACLC,MAAO,YACN,CACDD,IAAK,KACLC,MAAO,OACLA,MAAOL,EAAWc,SAAU,SAAAC,GAC9BC,QAAQC,IAAIF,EAAO,aACnBd,EAAac,IACZ3B,QAAQ,eAIjB,kBACE,GAAM,MADR,Y,2MAOJH,EAAWiC,gBAAiB","file":"component---components-search-index-mdx-a799e48b56ac93d7df5e.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/zenlayer/Documents/HZ_FE/zen-design/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Search, Icon } from '@zenlayer/zen-design';\nimport { HashRouter } from 'react-router-dom';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"search-搜索\"\n    }}>{`Search 搜索`}</h1>\n    <h2 {...{\n      \"id\": \"何时使用\"\n    }}>{`何时使用`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`列表搜索时使用`}</li>\n      <li parentName=\"ol\">{`支持多选和单选和文本输入搜索`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"基本用法\"\n    }}>{`基本用法`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [searchObj, setSearchObj] = React.useState({ tags: \\'tags1,tags2\\' })\\n  return (\\n    <HashRouter>\\n      <Search\\n        defaultValue={{\\n          tags: \\'tags1,tags2\\',\\n        }}\\n        defaultSearch={[\\n          {\\n            key: \\'名称\\',\\n            value: \\'name\\',\\n            regex: /^([A-Za-z0-9_\\\\-\\\\.])+\\\\@([A-Za-z0-9_\\\\-\\\\.])+\\\\.([A-Za-z]{2,4})$/,\\n          },\\n          {\\n            key: \\'HostName\\',\\n            value: \\'hostname\\',\\n            regex: /^a{4}$/,\\n          },\\n        ]}\\n        config={[\\n          { key: \\'名称\\', value: \\'name\\' },\\n          { key: \\'HostName\\', value: \\'hostname\\' },\\n          { key: \\'IP\\', value: \\'ip\\' },\\n          {\\n            key: \\'Port\\',\\n            value: \\'port\\',\\n            type: \\'status\\',\\n            option: [\\n              { label: \\'端口1\\', value: \\'port1\\', statusColor: \\'red\\' },\\n              { label: \\'端口2\\', value: \\'port2\\', statusColor: \\'green\\' },\\n              { label: \\'端口3\\', value: \\'port3\\', statusColor: \\'yellow\\' },\\n              { label: \\'端口4\\', value: \\'port4\\', statusColor: \\'red\\' },\\n              { label: \\'端口5\\', value: \\'port5\\', statusColor: \\'red\\' },\\n              { label: \\'端口6\\', value: \\'port6\\', statusColor: \\'red\\' },\\n            ],\\n            mode: \\'single\\',\\n          },\\n          {\\n            key: \\'Tags\\',\\n            value: \\'tags\\',\\n            type: \\'icon\\',\\n            option: [\\n              {\\n                label: \\'标签1\\',\\n                value: \\'tags1\\',\\n                icon: <Icon type=\\\"CheckSquareOutlined\\\" />,\\n              },\\n              {\\n                label: \\'标签2\\',\\n                value: \\'tags2\\',\\n                icon: <Icon type=\\\"CheckSquareOutlined\\\" />,\\n              },\\n              {\\n                label: \\'标签3\\',\\n                value: \\'tags3\\',\\n                icon: <Icon type=\\\"CheckSquareOutlined\\\" />,\\n              },\\n              {\\n                label: \\'标签4\\',\\n                value: \\'tags4\\',\\n                icon: <Icon type=\\\"CheckSquareOutlined\\\" />,\\n              },\\n              {\\n                label: \\'标签5\\',\\n                value: \\'tags5\\',\\n                icon: <Icon type=\\\"CheckSquareOutlined\\\" />,\\n              },\\n              {\\n                label: \\'标签6\\',\\n                value: \\'tags6\\',\\n                icon: <Icon type=\\\"CheckSquareOutlined\\\" />,\\n              },\\n            ],\\n            mode: \\'multiple\\',\\n          },\\n          { key: \\'userName\\', value: \\'username\\' },\\n          { key: \\'ID\\', value: \\'id\\' },\\n        ]}\\n        value={searchObj}\\n        onSearch={query => {\\n          console.log(query, \\'searchObj\\')\\n          setSearchObj(query)\\n        }}\\n      />\\n    </HashRouter>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Search,\n      Icon,\n      HashRouter,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [searchObj, setSearchObj] = React.useState({\n          tags: 'tags1,tags2'\n        });\n        return <HashRouter mdxType=\"HashRouter\">\n        <Search defaultValue={{\n            tags: 'tags1,tags2'\n          }} defaultSearch={[{\n            key: '名称',\n            value: 'name',\n            regex: /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/\n          }, {\n            key: 'HostName',\n            value: 'hostname',\n            regex: /^a{4}$/\n          }]} config={[{\n            key: '名称',\n            value: 'name'\n          }, {\n            key: 'HostName',\n            value: 'hostname'\n          }, {\n            key: 'IP',\n            value: 'ip'\n          }, {\n            key: 'Port',\n            value: 'port',\n            type: 'status',\n            option: [{\n              label: '端口1',\n              value: 'port1',\n              statusColor: 'red'\n            }, {\n              label: '端口2',\n              value: 'port2',\n              statusColor: 'green'\n            }, {\n              label: '端口3',\n              value: 'port3',\n              statusColor: 'yellow'\n            }, {\n              label: '端口4',\n              value: 'port4',\n              statusColor: 'red'\n            }, {\n              label: '端口5',\n              value: 'port5',\n              statusColor: 'red'\n            }, {\n              label: '端口6',\n              value: 'port6',\n              statusColor: 'red'\n            }],\n            mode: 'single'\n          }, {\n            key: 'Tags',\n            value: 'tags',\n            type: 'icon',\n            option: [{\n              label: '标签1',\n              value: 'tags1',\n              icon: <Icon type=\"CheckSquareOutlined\" mdxType=\"Icon\" />\n            }, {\n              label: '标签2',\n              value: 'tags2',\n              icon: <Icon type=\"CheckSquareOutlined\" mdxType=\"Icon\" />\n            }, {\n              label: '标签3',\n              value: 'tags3',\n              icon: <Icon type=\"CheckSquareOutlined\" mdxType=\"Icon\" />\n            }, {\n              label: '标签4',\n              value: 'tags4',\n              icon: <Icon type=\"CheckSquareOutlined\" mdxType=\"Icon\" />\n            }, {\n              label: '标签5',\n              value: 'tags5',\n              icon: <Icon type=\"CheckSquareOutlined\" mdxType=\"Icon\" />\n            }, {\n              label: '标签6',\n              value: 'tags6',\n              icon: <Icon type=\"CheckSquareOutlined\" mdxType=\"Icon\" />\n            }],\n            mode: 'multiple'\n          }, {\n            key: 'userName',\n            value: 'username'\n          }, {\n            key: 'ID',\n            value: 'id'\n          }]} value={searchObj} onSearch={query => {\n            console.log(query, 'searchObj');\n            setSearchObj(query);\n          }} mdxType=\"Search\" />\n      </HashRouter>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"受控\"\n    }}>{`受控`}</h3>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}