{"version":3,"sources":["webpack:///../components/location-picker/index.mdx"],"names":["_frontmatter","Object","isExtensible","prototype","hasOwnProperty","call","defineProperty","configurable","value","name","filename","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","Playground","__position","__code","__scope","Props","LocationPicker","_LocationPicker","Button","_Button","Elevation","_Elevation","Typography","_Typography","Icon","_Icon","Spin","_Spin","mockRegions","options","setOptions","React","setValue","loading","setLoading","window","setTimeout","type","padding","spinning","mode","extraColumn","style","width","defaultActiveFilterKeys","filterOptions","key","label","onMatch","_ref2","zone","discount","_ref3","city","endsWith","extraElement","onChange","v","d","console","log","size","onClick","parentName","isMDXComponent"],"mappings":"icASaA,EAAe,QAAG,IAAAA,UAAAC,OAAAD,IAAAC,OAAAC,aAAAF,KAAAC,OAAAE,UAAAC,eAAAC,KAAAL,EAAA,eAAAC,OAAAK,eAAAN,EAAA,cAAAO,cAAA,EAAAC,MAAA,CAAAC,KAAA,eAAAC,SAAA,0CAC/B,MAAMC,EAAc,CAClBX,gBAEIY,EAAYC,IACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,EAAKC,YAAAH,EAAAI,GAER,OAAOC,YAACR,EAASS,YAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,cAI5EF,YAAA,MACE,GAAM,kBAAgB,kBAExBA,YAAA,MACE,GAAM,QAAM,QAEdA,YAACG,IAAU,CAACC,WAAY,EAAGC,OAAQ,42CAAm4CC,QAAS,CAC76CT,QACAJ,kBACAU,eACAI,UACAC,eAAcC,IACdC,OAAMC,IACNC,UAASC,IACTC,WAAUC,IACVC,KAAIC,IACJC,KAAIC,IACJC,gBACA3B,kBACAb,gBACCsB,QAAQ,cACZ,KACK,MACOmB,EAASC,GAAcC,cACvBnC,EAAOoC,GAAYD,cACnBE,EAASC,GAAcH,YAAe,GAQ7C,OAPAA,YAAgB,KACdI,OAAOC,WAAW,KAChBN,EAAWF,KACXI,EAAS,wCACTE,GAAW,IACV,OACF,IACI1B,YAAAa,IAAA,CAAWgB,KAAM,EAAGC,QAAQ,MAAM5B,QAAQ,aACjDF,YAAAmB,IAAA,CAAMY,SAAUN,EAASvB,QAAQ,QAC/BF,YAAAS,IAAA,CAAgBuB,KAbL,OAaiBC,YAAajC,YAAA,OAAKkC,MAAO,CACjDC,MAAO,UACN,YAAgBC,wBAAyB,CAAC,KAAMC,cAAe,CAAC,CACjEC,IAAK,IACLC,MAAO,OACPC,QAASC,IAAA,IAAC,KACRC,GACDD,EAAA,OAAKC,EAAKC,SAAW,MACrB,CACDL,IAAK,IACLC,MAAO,KACPC,QAASI,IAAA,IAAC,KACRC,GACDD,EAAA,OAAKC,EAAKN,MAAMO,SAAS,SACxB1D,MAAOA,EAAOiC,QAASA,EAAS0B,aAAc/C,YAAA,WAAK,UAAcgD,SAAUA,CAACC,EAAGC,KACjF1B,EAASyB,GACTE,QAAQC,IAAI,6BAA8BH,IACzC/C,QAAQ,oBAEfF,YAAAW,IAAA,CAAQ0C,KAAK,IAAIC,QAASA,KACtB9B,EAAS,aACRtB,QAAQ,UAAS,UAM1BF,YAAA,MACE,GAAM,OAAK,OAEbA,YAAA,aACEA,YAAA,SAAOuD,WAAW,SAChBvD,YAAA,MAAIuD,WAAW,SACbvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,MAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,MAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,MAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,SAInBvD,YAAA,SAAOuD,WAAW,SAChBvD,YAAA,MAAIuD,WAAW,SACbvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,QAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,uBAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,yBAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,WAGjBvD,YAAA,MAAIuD,WAAW,SACbvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,gBAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,OAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,UAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,MAGjBvD,YAAA,MAAIuD,WAAW,SACbvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,SAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,KAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,UAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,MAGjBvD,YAAA,MAAIuD,WAAW,SACbvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,WAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,QAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,YAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,MAGjBvD,YAAA,MAAIuD,WAAW,SACbvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,iBAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,SAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,gCAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,MAGjBvD,YAAA,MAAIuD,WAAW,SACbvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,qBAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,mBAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,UAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,MAGjBvD,YAAA,MAAIuD,WAAW,SACbvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,gBAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,0BAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,mBAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,MAGjBvD,YAAA,MAAIuD,WAAW,SACbvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,UAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,SAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,mBAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,MAGjBvD,YAAA,MAAIuD,WAAW,SACbvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,YAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,WAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,2BAEfvD,YAAA,MAAIuD,WAAW,KACb,MAAS,MAAI,cAOxB,IAAA7D,UAAAb,OAAAa,IAAAb,OAAAC,aAAAY,KAAAb,OAAAE,UAAAC,eAAAC,KAAAS,EAAA,eAAAb,OAAAK,eAAAQ,EAAA,cAAAP,cAAA,EAAAC,MAAA,CAAAC,KAAA,aAAAC,SAAA,0CAEDI,EAAW8D,gBAAiB","file":"component---components-location-picker-index-mdx-153dac386aaca488cd38.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dylan.zhu/Documents/HZ_FE/zen-design/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { LocationPicker, Button, Elevation, Typography, Icon, Spin } from '@zenlayer/zen-design'; // 引入组件\nimport { mockRegions } from './test-data.tsx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"locationpicker\"\n    }}>{`LocationPicker`}</h1>\n    <h3 {...{\n      \"id\": \"基本用法\"\n    }}>{`基本用法`}</h3>\n    <Playground __position={0} __code={'() => {\\n  const mode = \\'zone\\'\\n  const [options, setOptions] = React.useState()\\n  const [value, setValue] = React.useState()\\n  const [loading, setLoading] = React.useState(true)\\n  React.useEffect(() => {\\n    window.setTimeout(() => {\\n      setOptions(mockRegions)\\n      setValue(\\'2f646878-4d49-457c-8fcb-6d7c54e3dff6\\')\\n      setLoading(false)\\n    }, 1500)\\n  }, [])\\n  return (\\n    <Elevation type={3} padding=\\\"lll\\\">\\n      <Spin spinning={loading}>\\n        <LocationPicker\\n          mode={mode}\\n          extraColumn={<div style={{ width: \\'120px\\' }}>23423424</div>}\\n          defaultActiveFilterKeys={[\\'1\\']}\\n          filterOptions={[\\n            {\\n              key: \\'1\\',\\n              label: \\'Sale\\',\\n              onMatch: ({ zone }) => zone.discount < 100,\\n            },\\n            {\\n              key: \\'2\\',\\n              label: \\'-1\\',\\n              onMatch: ({ city }) => city.label.endsWith(\\'-1\\'),\\n            },\\n          ]}\\n          value={value}\\n          options={options}\\n          extraElement={<div>额外信息展示</div>}\\n          onChange={(v, d) => {\\n            setValue(v)\\n            console.log(\\'[LocationPicker] onChange:\\', v)\\n          }}\\n        />\\n      </Spin>\\n      <Button\\n        size=\\\"s\\\"\\n        onClick={() => {\\n          setValue(\\'Asia-4-1\\')\\n        }}\\n      >\\n        SET\\n      </Button>\\n    </Elevation>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      LocationPicker,\n      Button,\n      Elevation,\n      Typography,\n      Icon,\n      Spin,\n      mockRegions,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const mode = 'zone';\n        const [options, setOptions] = React.useState();\n        const [value, setValue] = React.useState();\n        const [loading, setLoading] = React.useState(true);\n        React.useEffect(() => {\n          window.setTimeout(() => {\n            setOptions(mockRegions);\n            setValue('2f646878-4d49-457c-8fcb-6d7c54e3dff6');\n            setLoading(false);\n          }, 1500);\n        }, []);\n        return <Elevation type={3} padding=\"lll\" mdxType=\"Elevation\">\n        <Spin spinning={loading} mdxType=\"Spin\">\n          <LocationPicker mode={mode} extraColumn={<div style={{\n              width: '120px'\n            }}>23423424</div>} defaultActiveFilterKeys={['1']} filterOptions={[{\n              key: '1',\n              label: 'Sale',\n              onMatch: ({\n                zone\n              }) => zone.discount < 100\n            }, {\n              key: '2',\n              label: '-1',\n              onMatch: ({\n                city\n              }) => city.label.endsWith('-1')\n            }]} value={value} options={options} extraElement={<div>额外信息展示</div>} onChange={(v, d) => {\n              setValue(v);\n              console.log('[LocationPicker] onChange:', v);\n            }} mdxType=\"LocationPicker\" />\n        </Spin>\n        <Button size=\"s\" onClick={() => {\n            setValue('Asia-4-1');\n          }} mdxType=\"Button\">\n          SET\n        </Button>\n      </Elevation>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`属性`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`mode`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`模式(选择 city 还是 zone)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`'city' `}{`|`}{` 'zone'`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`'zone'`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`defaultValue`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`value`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`值`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`options`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`地区选项`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Region[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`filterOptions`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`过滤器选项`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`LocationPickerFilterOption[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`searchPlaceholder`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`搜索框 placeholder`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`extraElement`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`额外信息展示（例如：BMC 创建页出口带宽）`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`React.ReactNode`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`noData`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`无数据内容`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`React.ReactNode`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`地区改变时回调`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(value: string) => void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}