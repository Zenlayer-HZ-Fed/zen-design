{"version":3,"sources":["webpack:///../components/modal/index.mdx"],"names":["_frontmatter","Object","isExtensible","prototype","hasOwnProperty","call","defineProperty","configurable","value","name","filename","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","Playground","__position","__code","__scope","Props","Modal","_Modal","Button","_Button","visible","setVisible","React","onClick","title","subTitle","closable","onOk","onCancel","footer","type","okButtonText","cancelButtonText","okButtonProps","danger","cancelButtonProps","white","async","Promise","resolve","then","reject","setTimeout","open","useModal","content","buttonChild","size","_ref2","setOnReset","setResetDisabled","console","log","parentName","isMDXComponent"],"mappings":"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","file":"component---components-modal-index-mdx-65061fc0767509b2218a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dylan.zhu/Documents/HZ_FE/zen-design/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Modal, Button } from '@zenlayer/zen-design'; // 引入组件\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"modal-对话框\"\n    }}>{`Modal 对话框`}</h1>\n    <p>{`模态对话框。`}</p>\n    <h2 {...{\n      \"id\": \"何时使用\"\n    }}>{`何时使用`}</h2>\n    <p>{`需要用户处理事务，又不希望跳转页面以致打断工作流程时，可以使用 Modal 在当前页面正中打开一个浮层，承载相应的操作。`}</p>\n    <h2 {...{\n      \"id\": \"基本用法\"\n    }}>{`基本用法`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [visible, setVisible] = React.useState(false)\\n  return (\\n    <>\\n      <Button\\n        onClick={() => {\\n          setVisible(true)\\n        }}\\n      >\\n        Open Modal\\n      </Button>\\n      <Modal\\n        visible={visible}\\n        title=\\\"第一个demo\\\"\\n        subTitle=\\\"SubTitle 1-2\\\"\\n        closable\\n        onOk={() => {\\n          setVisible(false)\\n        }}\\n        onCancel={() => {\\n          setVisible(false)\\n        }}\\n      >\\n        <div>content content content</div>\\n      </Modal>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Modal,\n      Button,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visible, setVisible] = React.useState(false);\n        return <>\n        <Button onClick={() => {\n            setVisible(true);\n          }} mdxType=\"Button\">\n          Open Modal\n        </Button>\n        <Modal visible={visible} title=\"第一个demo\" subTitle=\"SubTitle 1-2\" closable onOk={() => {\n            setVisible(false);\n          }} onCancel={() => {\n            setVisible(false);\n          }} mdxType=\"Modal\">\n          <div>content content content</div>\n        </Modal>\n      </>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"自定义页脚\"\n    }}>{`自定义页脚`}</h3>\n    <Playground __position={1} __code={'() => {\\n  const [visible, setVisible] = React.useState(false)\\n  return (\\n    <>\\n      <Button\\n        onClick={() => {\\n          setVisible(true)\\n        }}\\n      >\\n        Open Modal\\n      </Button>\\n      <Modal\\n        visible={visible}\\n        title=\\\"第二个demo\\\"\\n        footer={\\n          <div>\\n            <Button\\n              type=\\\"normal\\\"\\n              onClick={() => {\\n                setVisible(false)\\n              }}\\n            >\\n              Return\\n            </Button>\\n            <Button\\n              onClick={() => {\\n                setVisible(false)\\n              }}\\n            >\\n              Submit\\n            </Button>\\n          </div>\\n        }\\n      >\\n        <div>content content content</div>\\n      </Modal>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Modal,\n      Button,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visible, setVisible] = React.useState(false);\n        return <>\n        <Button onClick={() => {\n            setVisible(true);\n          }} mdxType=\"Button\">\n          Open Modal\n        </Button>\n        <Modal visible={visible} title=\"第二个demo\" footer={<div>\n              <Button type=\"normal\" onClick={() => {\n              setVisible(false);\n            }} mdxType=\"Button\">\n                Return\n              </Button>\n              <Button onClick={() => {\n              setVisible(false);\n            }} mdxType=\"Button\">\n                Submit\n              </Button>\n            </div>} mdxType=\"Modal\">\n          <div>content content content</div>\n        </Modal>\n      </>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"设置按钮文字和属性\"\n    }}>{`设置按钮文字和属性`}</h3>\n    <Playground __position={2} __code={'() => {\\n  const [visible, setVisible] = React.useState(false)\\n  return (\\n    <>\\n      <Button\\n        onClick={() => {\\n          setVisible(true)\\n        }}\\n      >\\n        Open Modal\\n      </Button>\\n      <Modal\\n        visible={visible}\\n        title=\\\"第三个demo\\\"\\n        onOk={() => {\\n          setVisible(false)\\n        }}\\n        onCancel={() => {\\n          setVisible(false)\\n        }}\\n        okButtonText=\\\"确认\\\"\\n        cancelButtonText=\\\"取消\\\"\\n        okButtonProps={{ danger: true }}\\n        cancelButtonProps={{ white: true }}\\n      >\\n        <div>content content content</div>\\n      </Modal>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Modal,\n      Button,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visible, setVisible] = React.useState(false);\n        return <>\n        <Button onClick={() => {\n            setVisible(true);\n          }} mdxType=\"Button\">\n          Open Modal\n        </Button>\n        <Modal visible={visible} title=\"第三个demo\" onOk={() => {\n            setVisible(false);\n          }} onCancel={() => {\n            setVisible(false);\n          }} okButtonText=\"确认\" cancelButtonText=\"取消\" okButtonProps={{\n            danger: true\n          }} cancelButtonProps={{\n            white: true\n          }} mdxType=\"Modal\">\n          <div>content content content</div>\n        </Modal>\n      </>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"异步关闭\"\n    }}>{`异步关闭`}</h3>\n    <Playground __position={3} __code={'() => {\\n  const [visible, setVisible] = React.useState(false)\\n  return (\\n    <>\\n      <Button\\n        onClick={() => {\\n          setVisible(true)\\n        }}\\n      >\\n        Open Modal\\n      </Button>\\n      <Modal\\n        visible={visible}\\n        title=\\\"第四个demo\\\"\\n        closable\\n        onOk={async () => {\\n          return Promise.resolve({\\n            then: function(resolve, reject) {\\n              setTimeout(() => {\\n                setVisible(false)\\n                resolve(true)\\n              }, 10000)\\n            },\\n          })\\n        }} //两种写法，1.async函数，return boolean，2.return Promise函数\\n        onCancel={() => {\\n          setVisible(false)\\n        }}\\n      >\\n        <div>content content content</div>\\n      </Modal>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Modal,\n      Button,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visible, setVisible] = React.useState(false);\n        return <>\n        <Button onClick={() => {\n            setVisible(true);\n          }} mdxType=\"Button\">\n          Open Modal\n        </Button>\n        <Modal visible={visible} title=\"第四个demo\" closable onOk={async () => {\n            return Promise.resolve({\n              then: function (resolve, reject) {\n                setTimeout(() => {\n                  setVisible(false);\n                  resolve(true);\n                }, 10000);\n              }\n            });\n          }} //两种写法，1.async函数，return boolean，2.return Promise函数\n          onCancel={() => {\n            setVisible(false);\n          }} mdxType=\"Modal\">\n          <div>content content content</div>\n        </Modal>\n      </>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"usemodal\"\n    }}>{`useModal`}</h3>\n    <Playground __position={4} __code={'() => {\\n  const [{ open }] = Modal.useModal()\\n  return (\\n    <a\\n      onClick={() => {\\n        open({\\n          title: \\'第四个demo\\',\\n          content: \\'content content content\\',\\n          onOk: () => {\\n            return Promise.resolve({\\n              then: function(resolve, reject) {\\n                setTimeout(() => {\\n                  resolve(true)\\n                }, 10000)\\n              },\\n            })\\n          }, //两种写法，1.async函数，return boolean，2.return Promise函数\\n        })\\n      }}\\n    >\\n      open\\n    </a>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Modal,\n      Button,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [{\n          open\n        }] = Modal.useModal();\n        return <a onClick={() => {\n          open({\n            title: '第四个demo',\n            content: 'content content content',\n            onOk: () => {\n              return Promise.resolve({\n                then: function (resolve, reject) {\n                  setTimeout(() => {\n                    resolve(true);\n                  }, 10000);\n                }\n              });\n            } //两种写法，1.async函数，return boolean，2.return Promise函数\n          });\n        }}>\n        open\n      </a>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"button-child\"\n    }}>{`Button Child`}</h3>\n    <Playground __position={5} __code={'() => {\\n  const [visible, setVisible] = React.useState(false)\\n  return (\\n    <>\\n      <Button\\n        onClick={() => {\\n          setVisible(true)\\n        }}\\n      >\\n        Open Modal\\n      </Button>\\n      <Modal\\n        visible={visible}\\n        title=\\\"Button demo\\\"\\n        closable\\n        buttonChild={\\n          <div>\\n            <Button size=\\\"s\\\">test</Button>\\n          </div>\\n        }\\n        footer={\\n          <div>\\n            <Button\\n              type=\\\"normal\\\"\\n              onClick={() => {\\n                setVisible(false)\\n              }}\\n            >\\n              Return\\n            </Button>\\n            <Button\\n              onClick={() => {\\n                setVisible(false)\\n              }}\\n            >\\n              Submit\\n            </Button>\\n          </div>\\n        }\\n      >\\n        <div>content content content</div>\\n      </Modal>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Modal,\n      Button,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visible, setVisible] = React.useState(false);\n        return <>\n        <Button onClick={() => {\n            setVisible(true);\n          }} mdxType=\"Button\">\n          Open Modal\n        </Button>\n        <Modal visible={visible} title=\"Button demo\" closable buttonChild={<div>\n              <Button size=\"s\" mdxType=\"Button\">test</Button>\n            </div>} footer={<div>\n              <Button type=\"normal\" onClick={() => {\n              setVisible(false);\n            }} mdxType=\"Button\">\n                Return\n              </Button>\n              <Button onClick={() => {\n              setVisible(false);\n            }} mdxType=\"Button\">\n                Submit\n              </Button>\n            </div>} mdxType=\"Modal\">\n          <div>content content content</div>\n        </Modal>\n      </>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"reset\"\n    }}>{`Reset`}</h3>\n    <Playground __position={6} __code={'() => {\\n  const [{ open }] = Modal.useModal()\\n  return (\\n    <a\\n      onClick={() => {\\n        open({\\n          title: \\'第四个demo\\',\\n          content: ({ setOnReset, setResetDisabled }) => {\\n            setResetDisabled(false)\\n            setOnReset(() => {\\n              setResetDisabled(true)\\n              console.log(\\'onReset\\')\\n            })\\n            return \\'content content content\\'\\n          },\\n          onOk: () => {\\n            return Promise.resolve({\\n              then: function(resolve, reject) {\\n                setTimeout(() => {\\n                  resolve(true)\\n                }, 10000)\\n              },\\n            })\\n          }, //两种写法，1.async函数，return boolean，2.return Promise函数\\n        })\\n      }}\\n    >\\n      open\\n    </a>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Modal,\n      Button,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [{\n          open\n        }] = Modal.useModal();\n        return <a onClick={() => {\n          open({\n            title: '第四个demo',\n            content: ({\n              setOnReset,\n              setResetDisabled\n            }) => {\n              setResetDisabled(false);\n              setOnReset(() => {\n                setResetDisabled(true);\n                console.log('onReset');\n              });\n              return 'content content content';\n            },\n            onOk: () => {\n              return Promise.resolve({\n                then: function (resolve, reject) {\n                  setTimeout(() => {\n                    resolve(true);\n                  }, 10000);\n                }\n              });\n            } //两种写法，1.async函数，return boolean，2.return Promise函数\n          });\n        }}>\n        open\n      </a>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <h3 {...{\n      \"id\": \"modalusemodal0open-共用\"\n    }}>{`Modal、useModal`}{`[0]`}{`.open 共用`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`属性`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`title`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`标题`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`ReactNode`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`subTitle`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`子标题`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`ReactNode`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`closable`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`是否显示右上角的关闭按钮`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`okButtonText`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`确认按钮文字,不要此按钮时设置为 null`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}{`|`}{`null`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"Confirm\"`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`cancelButtonText`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`取消按钮文字,不要此按钮时设置为 null`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}{`|`}{`null`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"Cancel\"`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`okButtonProps`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`确认按钮 props`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`ButtonProps`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`cancelButtonProps`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`取消按钮 props`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`ButtonProps`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onOk`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`点击确定回调，函数为 promise 或者返回 promise 时，会自动展示 Loading；非受控或者使用 useModal`}{`[0]`}{`.open 时，返回 true 或者返回 promise 执行 resolve 后自动关闭`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(data) => boolean `}{`|`}{` Promise<boolean`}{`>`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onCancel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`取消回调`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`()=>void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`footer`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`底部内容`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`ReactNode`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`centered`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`垂直居中展示 Modal`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`width`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`弹窗宽度`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`zIndex`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`设置 Modal 的 z-index`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`1000`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`自定义 CSS className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`style`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`自定义内联样式`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`CSSProperties`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"modal\"\n    }}>{`Modal`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`属性`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`defaultVisible`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`初始对话框是否可见`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`visible`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`对话框是否可见`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onVisibleChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`对话框显隐回调`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(visible:boolean)=>void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`destroyOnClose`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`对话框关闭时销毁 dom`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`buttonChild`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`对话框右上角按钮区域`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`React.ReactElement[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"usemodal0open\"\n    }}>{`useModal`}{`[0]`}{`.open`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`属性`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`content`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`内容`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`React.ReactNode`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <pre><code parentName=\"pre\" {...{}}>{`    const [{ open,close },contextHolder] = Modal.useModal();\n    return (\n      <a\n        onClick={() => {\n          open({\n            title: 'demo',\n            content: 'content content content',\n            onOk: async() => {\n             const {success} =  await run()\n             return success\n            },\n          });\n        }}\n      >\n        open\n      </a>\n    );\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}