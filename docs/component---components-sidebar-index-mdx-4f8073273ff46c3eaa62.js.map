{"version":3,"sources":["webpack:///../components/sidebar/index.mdx"],"names":["_frontmatter","Object","isExtensible","prototype","hasOwnProperty","call","defineProperty","configurable","value","name","filename","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","Playground","__position","__code","__scope","Props","Sidebar","_Sidebar","Button","_Button","HashRouter","mainMenus","subMenus","responsive","setresponsive","React","onClick","style","width","height","background","display","resourse","team","flex","isMDXComponent"],"mappings":"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","file":"component---components-sidebar-index-mdx-4f8073273ff46c3eaa62.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dylan.zhu/Documents/HZ_FE/zen-design/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Sidebar, Button } from '@zenlayer/zen-design'; // 引入组件\nimport { HashRouter } from 'react-router-dom';\nimport { mainMenus, subMenus } from './demo/menus.tsx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"sidebar-导航\"\n    }}>{`Sidebar 导航`}</h1>\n    <p>{`为页面和功能提供导航的菜单列表。`}</p>\n    <h1 {...{\n      \"id\": \"何时使用\"\n    }}>{`何时使用`}</h1>\n    <p>{`导航菜单是一个网站的灵魂，用户依赖导航在各个页面中进行跳转。\n分为主菜单和子菜单`}</p>\n    <p>{`更多布局和导航的使用可以参考：`}<a parentName=\"p\" {...{\n        \"href\": \"/zen-design/Layout\"\n      }}>{`通用布局`}</a>{`。`}</p>\n    <h2 {...{\n      \"id\": \"基本用法\"\n    }}>{`基本用法`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [responsive, setresponsive] = React.useState(\\'s\\')\\n  return (\\n    <>\\n      <div>\\n        responsive:{\\' \\'}\\n        <Button\\n          onClick={() => {\\n            setresponsive(\\'s\\')\\n          }}\\n        >\\n          s\\n        </Button>\\n        <Button\\n          onClick={() => {\\n            setresponsive(\\'m\\')\\n          }}\\n        >\\n          m\\n        </Button>\\n        <Button\\n          onClick={() => {\\n            setresponsive(\\'l\\')\\n          }}\\n        >\\n          l\\n        </Button>\\n      </div>\\n      <div style={{ width: 1000, height: 1200, background: \\'#ccc\\' }}>\\n        <HashRouter>\\n          <div style={{ display: \\'flex\\', width: \\'100%\\', height: \\'100%\\' }}>\\n            <Sidebar\\n              responsive={responsive}\\n              mainMenus={mainMenus}\\n              subMenus={subMenus}\\n              resourse={<div>Resourse</div>}\\n              team={<div>Team</div>}\\n            />\\n            <div style={{ flex: 1 }}>\\n              content------content------content------content------content------\\n            </div>\\n          </div>\\n        </HashRouter>\\n      </div>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Sidebar,\n      Button,\n      HashRouter,\n      mainMenus,\n      subMenus,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [responsive, setresponsive] = React.useState('s');\n        return <>\n        <div>\n          responsive:{' '}\n          <Button onClick={() => {\n              setresponsive('s');\n            }} mdxType=\"Button\">\n            s\n          </Button>\n          <Button onClick={() => {\n              setresponsive('m');\n            }} mdxType=\"Button\">\n            m\n          </Button>\n          <Button onClick={() => {\n              setresponsive('l');\n            }} mdxType=\"Button\">\n            l\n          </Button>\n        </div>\n        <div style={{\n            width: 1000,\n            height: 1200,\n            background: '#ccc'\n          }}>\n          <HashRouter mdxType=\"HashRouter\">\n            <div style={{\n                display: 'flex',\n                width: '100%',\n                height: '100%'\n              }}>\n              <Sidebar responsive={responsive} mainMenus={mainMenus} subMenus={subMenus} resourse={<div>Resourse</div>} team={<div>Team</div>} mdxType=\"Sidebar\" />\n              <div style={{\n                  flex: 1\n                }}>\n                content------content------content------content------content------\n              </div>\n            </div>\n          </HashRouter>\n        </div>\n      </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <h3 {...{\n      \"id\": \"sidebar\"\n    }}>{`Sidebar`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`属性`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`responsive`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`响应式`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`'s' `}{`|`}{` 'm' `}{`|`}{` 'l'`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`'m'`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`resourse`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Resourse 组件`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`React.ReactElement`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`team`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Team 组件`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`React.ReactElement`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`mainMenus`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`主菜单数据`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`MainMenus`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`subMenus`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`子菜单数据`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`SubMenus`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`自定义 CSS className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`style`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`自定义内联样式`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`CSSProperties`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"mainmenus\"\n    }}>{`MainMenus`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`  mainMenus: {\n    name: string;\n    children: {\n      name: string;\n      path: string;\n      icon: React.ReactElement;\n    }[];\n  }[];\n\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"submenus\"\n    }}>{`SubMenus`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`  subMenus: {\n      title: string;\n      subTitle?: string;\n      matchPath: string[];\n      children: {\n        name: string;\n        path?: string;\n        children?: {\n          name: string;\n          path: string;\n        }[];\n      }[];\n    }[];\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}