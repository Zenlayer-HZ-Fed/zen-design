{"version":3,"sources":["webpack:///../components/table/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","Table","Button","Dropdown","Menu","Icon","Space","Switch","Help","filterDropdownRender","filterIconRender","expandIconRender","useSetColumn","SetColumnButton","rowKey","columns","title","dataIndex","dataSource","key","name","age","address","selection","type","onChange","keys","rows","console","log","operation","selectedRowKeys","selectedRows","size","onClick","danger","React","undefined","setselection","direction","style","width","v","defaultSelectedRowKeys","filters","text","value","filterDropdown","filterIcon","onFilter","record","includes","pagination","sorter","defaultSortOrder","a","b","tips","description","expandable","expandedRowRender","expandIcon","loading","scroll","x","fixed","columnsOpts","disabled","defaultChecked","id","userUid","version","Group","icon","parentName","isMDXComponent"],"mappings":"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","file":"component---components-table-index-mdx-12de230106936ff1d838.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/zenlayer/Documents/HZ_FE/zen-design/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Table, Button, Dropdown, Menu, Icon, Space, Switch } from '@zenlayer/zen-design'; // 引入组件\n\nimport { Help, filterDropdownRender, filterIconRender, expandIconRender, useSetColumn, SetColumnButton } from './index.ts';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"table-表格\"\n    }}>{`Table 表格`}</h1>\n    <h2 {...{\n      \"id\": \"何时使用\"\n    }}>{`何时使用`}</h2>\n    <p>{`当有大量结构化的数据需要展现时；`}</p>\n    <p>{`当需要对数据进行排序、搜索、分页、自定义操作等复杂行为时。`}</p>\n    <h2 {...{\n      \"id\": \"基本用法\"\n    }}>{`基本用法`}</h2>\n    <h3 {...{\n      \"id\": \"最基本的\"\n    }}>{`最基本的`}</h3>\n    <Playground __position={0} __code={'<Table\\n  rowKey=\\\"key\\\"\\n  columns={[\\n    {\\n      title: \\'姓名\\',\\n      dataIndex: \\'name\\',\\n    },\\n    {\\n      title: \\'年龄\\',\\n      dataIndex: \\'age\\',\\n    },\\n    {\\n      title: \\'住址\\',\\n      dataIndex: \\'address\\',\\n    },\\n  ]}\\n  dataSource={[\\n    {\\n      key: \\'1\\',\\n      name: \\'胡彦斌\\',\\n      age: 32,\\n      address: \\'西湖区湖底公园1号\\',\\n    },\\n    {\\n      key: \\'2\\',\\n      name: \\'胡彦祖\\',\\n      age: 42,\\n      address: \\'西湖区湖底公园1号\\',\\n    },\\n  ]}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Table,\n      Button,\n      Dropdown,\n      Menu,\n      Icon,\n      Space,\n      Switch,\n      Help,\n      filterDropdownRender,\n      filterIconRender,\n      expandIconRender,\n      useSetColumn,\n      SetColumnButton,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Table rowKey=\"key\" columns={[{\n        title: '姓名',\n        dataIndex: 'name'\n      }, {\n        title: '年龄',\n        dataIndex: 'age'\n      }, {\n        title: '住址',\n        dataIndex: 'address'\n      }]} dataSource={[{\n        key: '1',\n        name: '胡彦斌',\n        age: 32,\n        address: '西湖区湖底公园1号'\n      }, {\n        key: '2',\n        name: '胡彦祖',\n        age: 42,\n        address: '西湖区湖底公园1号'\n      }]} mdxType=\"Table\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"多选\"\n    }}>{`多选`}</h3>\n    <Playground __position={1} __code={'<Table\\n  rowKey=\\\"key\\\"\\n  columns={[\\n    {\\n      title: \\'姓名\\',\\n      dataIndex: \\'name\\',\\n    },\\n    {\\n      title: \\'年龄\\',\\n      dataIndex: \\'age\\',\\n    },\\n    {\\n      title: \\'住址\\',\\n      dataIndex: \\'address\\',\\n    },\\n  ]}\\n  dataSource={[\\n    {\\n      key: \\'1\\',\\n      name: \\'胡彦斌\\',\\n      age: 32,\\n      address: \\'西湖区湖底公园1号\\',\\n    },\\n    {\\n      key: \\'2\\',\\n      name: \\'胡彦祖\\',\\n      age: 42,\\n      address: \\'西湖区湖底公园1号\\',\\n    },\\n  ]}\\n  selection={{\\n    type: \\'checkbox\\',\\n    onChange: (keys, rows) => {\\n      console.log(keys, rows)\\n    },\\n    operation: (selectedRowKeys, selectedRows) => [\\n      <Button\\n        key=\\\"1\\\"\\n        size=\\\"s\\\"\\n        type=\\\"normal\\\"\\n        onClick={() => {\\n          console.log(selectedRowKeys, selectedRows)\\n        }}\\n        danger\\n      >\\n        Delete\\n      </Button>,\\n    ],\\n  }}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Table,\n      Button,\n      Dropdown,\n      Menu,\n      Icon,\n      Space,\n      Switch,\n      Help,\n      filterDropdownRender,\n      filterIconRender,\n      expandIconRender,\n      useSetColumn,\n      SetColumnButton,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Table rowKey=\"key\" columns={[{\n        title: '姓名',\n        dataIndex: 'name'\n      }, {\n        title: '年龄',\n        dataIndex: 'age'\n      }, {\n        title: '住址',\n        dataIndex: 'address'\n      }]} dataSource={[{\n        key: '1',\n        name: '胡彦斌',\n        age: 32,\n        address: '西湖区湖底公园1号'\n      }, {\n        key: '2',\n        name: '胡彦祖',\n        age: 42,\n        address: '西湖区湖底公园1号'\n      }]} selection={{\n        type: 'checkbox',\n        onChange: (keys, rows) => {\n          console.log(keys, rows);\n        },\n        operation: (selectedRowKeys, selectedRows) => [<Button key=\"1\" size=\"s\" type=\"normal\" onClick={() => {\n          console.log(selectedRowKeys, selectedRows);\n        }} danger mdxType=\"Button\">\n          Delete\n        </Button>]\n      }} mdxType=\"Table\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"单选\"\n    }}>{`单选`}</h3>\n    <Playground __position={2} __code={'() => {\\n  const [selection, setselection] = React.useState(undefined)\\n  return (\\n    <Space direction=\\\"vertical\\\" style={{ width: \\'100%\\' }}>\\n      <Switch\\n        onChange={v => {\\n          if (v) {\\n            setselection({\\n              type: \\'radio\\',\\n              defaultSelectedRowKeys: [\\'1\\'],\\n            })\\n          } else {\\n            setselection(undefined)\\n          }\\n        }}\\n      />\\n      <Table\\n        rowKey=\\\"key\\\"\\n        columns={[\\n          {\\n            title: \\'姓名\\',\\n            dataIndex: \\'name\\',\\n          },\\n          {\\n            title: \\'年龄\\',\\n            dataIndex: \\'age\\',\\n          },\\n          {\\n            title: \\'住址\\',\\n            dataIndex: \\'address\\',\\n          },\\n        ]}\\n        dataSource={[\\n          {\\n            key: \\'1\\',\\n            name: \\'胡彦斌\\',\\n            age: 32,\\n            address: \\'西湖区湖底公园1号\\',\\n          },\\n          {\\n            key: \\'2\\',\\n            name: \\'胡彦祖\\',\\n            age: 42,\\n            address: \\'西湖区湖底公园1号\\',\\n          },\\n        ]}\\n        selection={selection}\\n      />\\n    </Space>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Table,\n      Button,\n      Dropdown,\n      Menu,\n      Icon,\n      Space,\n      Switch,\n      Help,\n      filterDropdownRender,\n      filterIconRender,\n      expandIconRender,\n      useSetColumn,\n      SetColumnButton,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [selection, setselection] = React.useState(undefined);\n        return <Space direction=\"vertical\" style={{\n          width: '100%'\n        }} mdxType=\"Space\">\n        <Switch onChange={v => {\n            if (v) {\n              setselection({\n                type: 'radio',\n                defaultSelectedRowKeys: ['1']\n              });\n            } else {\n              setselection(undefined);\n            }\n          }} mdxType=\"Switch\" />\n        <Table rowKey=\"key\" columns={[{\n            title: '姓名',\n            dataIndex: 'name'\n          }, {\n            title: '年龄',\n            dataIndex: 'age'\n          }, {\n            title: '住址',\n            dataIndex: 'address'\n          }]} dataSource={[{\n            key: '1',\n            name: '胡彦斌',\n            age: 32,\n            address: '西湖区湖底公园1号'\n          }, {\n            key: '2',\n            name: '胡彦祖',\n            age: 42,\n            address: '西湖区湖底公园1号'\n          }]} selection={selection} mdxType=\"Table\" />\n      </Space>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"筛选\"\n    }}>{`筛选`}</h3>\n    <Playground __position={3} __code={'<Table\\n  rowKey=\\\"key\\\"\\n  columns={[\\n    {\\n      title: \\'姓名\\',\\n      dataIndex: \\'name\\',\\n      filters: [\\n        { text: \\'胡彦斌\\', value: \\'胡彦斌\\' },\\n        { text: \\'胡彦祖\\', value: \\'胡彦祖\\' },\\n      ],\\n      filterDropdown: filterDropdownRender,\\n      filterIcon: filterIconRender,\\n      onFilter: (value, record) => {\\n        console.log(value, record)\\n        return record.name.includes(value)\\n      },\\n    },\\n    {\\n      title: \\'年龄\\',\\n      dataIndex: \\'age\\',\\n    },\\n    {\\n      title: \\'住址\\',\\n      dataIndex: \\'address\\',\\n    },\\n  ]}\\n  dataSource={[\\n    {\\n      key: \\'1\\',\\n      name: \\'胡彦斌\\',\\n      age: 32,\\n      address: \\'西湖区湖底公园1号\\',\\n    },\\n    {\\n      key: \\'2\\',\\n      name: \\'胡彦祖\\',\\n      age: 42,\\n      address: \\'西湖区湖底公园1号\\',\\n    },\\n  ]}\\n  onChange={(pagination, filters, sorter) => {\\n    console.log(pagination, filters, sorter) //后端接口筛选可用此方法，不写onFilter\\n  }}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Table,\n      Button,\n      Dropdown,\n      Menu,\n      Icon,\n      Space,\n      Switch,\n      Help,\n      filterDropdownRender,\n      filterIconRender,\n      expandIconRender,\n      useSetColumn,\n      SetColumnButton,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Table rowKey=\"key\" columns={[{\n        title: '姓名',\n        dataIndex: 'name',\n        filters: [{\n          text: '胡彦斌',\n          value: '胡彦斌'\n        }, {\n          text: '胡彦祖',\n          value: '胡彦祖'\n        }],\n        filterDropdown: filterDropdownRender,\n        filterIcon: filterIconRender,\n        onFilter: (value, record) => {\n          console.log(value, record);\n          return record.name.includes(value);\n        }\n      }, {\n        title: '年龄',\n        dataIndex: 'age'\n      }, {\n        title: '住址',\n        dataIndex: 'address'\n      }]} dataSource={[{\n        key: '1',\n        name: '胡彦斌',\n        age: 32,\n        address: '西湖区湖底公园1号'\n      }, {\n        key: '2',\n        name: '胡彦祖',\n        age: 42,\n        address: '西湖区湖底公园1号'\n      }]} onChange={(pagination, filters, sorter) => {\n        console.log(pagination, filters, sorter); //后端接口筛选可用此方法，不写onFilter\n      }} mdxType=\"Table\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"排序\"\n    }}>{`排序`}</h3>\n    <Playground __position={4} __code={'<Table\\n  rowKey=\\\"key\\\"\\n  columns={[\\n    {\\n      title: \\'姓名\\',\\n      dataIndex: \\'name\\',\\n    },\\n    {\\n      title: \\'年龄\\',\\n      dataIndex: \\'age\\',\\n      defaultSortOrder: \\'descend\\',\\n      sorter: (a, b) => a.age - b.age,\\n    },\\n    {\\n      title: \\'住址\\',\\n      dataIndex: \\'address\\',\\n    },\\n  ]}\\n  onChange={(pagination, filters, sorter) => {\\n    console.log(pagination, filters, sorter) //后端接口排序可用此方法，sorter设置为true\\n  }}\\n  dataSource={[\\n    {\\n      key: \\'1\\',\\n      name: \\'胡彦斌\\',\\n      age: 32,\\n      address: \\'西湖区湖底公园1号\\',\\n    },\\n    {\\n      key: \\'2\\',\\n      name: \\'胡彦祖\\',\\n      age: 42,\\n      address: \\'西湖区湖底公园1号\\',\\n    },\\n  ]}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Table,\n      Button,\n      Dropdown,\n      Menu,\n      Icon,\n      Space,\n      Switch,\n      Help,\n      filterDropdownRender,\n      filterIconRender,\n      expandIconRender,\n      useSetColumn,\n      SetColumnButton,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Table rowKey=\"key\" columns={[{\n        title: '姓名',\n        dataIndex: 'name'\n      }, {\n        title: '年龄',\n        dataIndex: 'age',\n        defaultSortOrder: 'descend',\n        sorter: (a, b) => a.age - b.age\n      }, {\n        title: '住址',\n        dataIndex: 'address'\n      }]} onChange={(pagination, filters, sorter) => {\n        console.log(pagination, filters, sorter); //后端接口排序可用此方法，sorter设置为true\n      }} dataSource={[{\n        key: '1',\n        name: '胡彦斌',\n        age: 32,\n        address: '西湖区湖底公园1号'\n      }, {\n        key: '2',\n        name: '胡彦祖',\n        age: 42,\n        address: '西湖区湖底公园1号'\n      }]} mdxType=\"Table\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"提示\"\n    }}>{`提示`}</h3>\n    <Playground __position={5} __code={'<Table\\n  rowKey=\\\"key\\\"\\n  columns={[\\n    {\\n      title: <Help title=\\\"姓名\\\" tips=\\\"这就是简单的姓名\\\" />,\\n      dataIndex: \\'name\\',\\n    },\\n    {\\n      title: \\'年龄\\',\\n      dataIndex: \\'age\\',\\n    },\\n    {\\n      title: \\'住址\\',\\n      dataIndex: \\'address\\',\\n    },\\n  ]}\\n  dataSource={[\\n    {\\n      key: \\'1\\',\\n      name: \\'胡彦斌\\',\\n      age: 32,\\n      address: \\'西湖区湖底公园1号\\',\\n    },\\n    {\\n      key: \\'2\\',\\n      name: \\'胡彦祖\\',\\n      age: 42,\\n      address: \\'西湖区湖底公园1号\\',\\n    },\\n  ]}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Table,\n      Button,\n      Dropdown,\n      Menu,\n      Icon,\n      Space,\n      Switch,\n      Help,\n      filterDropdownRender,\n      filterIconRender,\n      expandIconRender,\n      useSetColumn,\n      SetColumnButton,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Table rowKey=\"key\" columns={[{\n        title: <Help title=\"姓名\" tips=\"这就是简单的姓名\" mdxType=\"Help\" />,\n        dataIndex: 'name'\n      }, {\n        title: '年龄',\n        dataIndex: 'age'\n      }, {\n        title: '住址',\n        dataIndex: 'address'\n      }]} dataSource={[{\n        key: '1',\n        name: '胡彦斌',\n        age: 32,\n        address: '西湖区湖底公园1号'\n      }, {\n        key: '2',\n        name: '胡彦祖',\n        age: 42,\n        address: '西湖区湖底公园1号'\n      }]} mdxType=\"Table\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"expanded\"\n    }}>{`Expanded`}</h3>\n    <Playground __position={6} __code={'<Table\\n  rowKey=\\\"key\\\"\\n  columns={[\\n    {\\n      title: \\'姓名\\',\\n      dataIndex: \\'name\\',\\n    },\\n    {\\n      title: \\'年龄\\',\\n      dataIndex: \\'age\\',\\n    },\\n    {\\n      title: \\'住址\\',\\n      dataIndex: \\'address\\',\\n    },\\n  ]}\\n  dataSource={[\\n    {\\n      key: \\'1\\',\\n      name: \\'胡彦斌\\',\\n      age: 32,\\n      address: \\'西湖区湖底公园1号\\',\\n      description:\\n        \\'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.\\',\\n    },\\n    {\\n      key: \\'2\\',\\n      name: \\'胡彦祖\\',\\n      age: 42,\\n      address: \\'西湖区湖底公园1号\\',\\n      description:\\n        \\'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.\\',\\n    },\\n  ]}\\n  expandable={{\\n    expandedRowRender: record => <span>{record.description}</span>,\\n    expandIcon: expandIconRender,\\n  }}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Table,\n      Button,\n      Dropdown,\n      Menu,\n      Icon,\n      Space,\n      Switch,\n      Help,\n      filterDropdownRender,\n      filterIconRender,\n      expandIconRender,\n      useSetColumn,\n      SetColumnButton,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Table rowKey=\"key\" columns={[{\n        title: '姓名',\n        dataIndex: 'name'\n      }, {\n        title: '年龄',\n        dataIndex: 'age'\n      }, {\n        title: '住址',\n        dataIndex: 'address'\n      }]} dataSource={[{\n        key: '1',\n        name: '胡彦斌',\n        age: 32,\n        address: '西湖区湖底公园1号',\n        description: 'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.'\n      }, {\n        key: '2',\n        name: '胡彦祖',\n        age: 42,\n        address: '西湖区湖底公园1号',\n        description: 'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.'\n      }]} expandable={{\n        expandedRowRender: record => <span>{record.description}</span>,\n        expandIcon: expandIconRender\n      }} mdxType=\"Table\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"空状态--loading\"\n    }}>{`空状态 && Loading`}</h3>\n    <Playground __position={7} __code={'<Table\\n  rowKey=\\\"key\\\"\\n  columns={[\\n    {\\n      title: \\'姓名\\',\\n      dataIndex: \\'name\\',\\n    },\\n    {\\n      title: \\'年龄\\',\\n      dataIndex: \\'age\\',\\n    },\\n    {\\n      title: \\'住址\\',\\n      dataIndex: \\'address\\',\\n    },\\n  ]}\\n  dataSource={[]}\\n  loading\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Table,\n      Button,\n      Dropdown,\n      Menu,\n      Icon,\n      Space,\n      Switch,\n      Help,\n      filterDropdownRender,\n      filterIconRender,\n      expandIconRender,\n      useSetColumn,\n      SetColumnButton,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Table rowKey=\"key\" columns={[{\n        title: '姓名',\n        dataIndex: 'name'\n      }, {\n        title: '年龄',\n        dataIndex: 'age'\n      }, {\n        title: '住址',\n        dataIndex: 'address'\n      }]} dataSource={[]} loading mdxType=\"Table\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"fix-scroll\"\n    }}>{`Fix Scroll`}</h3>\n    <Playground __position={8} __code={'<Table\\n  rowKey=\\\"key\\\"\\n  scroll={{ x: \\'100%\\' }}\\n  columns={[\\n    {\\n      title: \\'姓名\\',\\n      dataIndex: \\'name\\',\\n      width: 200,\\n      fixed: \\'left\\',\\n    },\\n    {\\n      title: \\'年龄\\',\\n      dataIndex: \\'age\\',\\n      width: 200,\\n      fixed: \\'left\\',\\n    },\\n    { title: \\'Column 1\\', dataIndex: \\'address\\', width: 200 },\\n    { title: \\'Column 2\\', dataIndex: \\'address\\', width: 200 },\\n    { title: \\'Column 3\\', dataIndex: \\'address\\', width: 200 },\\n    { title: \\'Column 4\\', dataIndex: \\'address\\', width: 200 },\\n    { title: \\'Column 5\\', dataIndex: \\'address\\', width: 200 },\\n    { title: \\'Column 6\\', dataIndex: \\'address\\', width: 200 },\\n    {\\n      title: \\'住址\\',\\n      dataIndex: \\'address\\',\\n      width: 200,\\n      fixed: \\'right\\',\\n    },\\n  ]}\\n  dataSource={[\\n    {\\n      key: \\'1\\',\\n      name: \\'John Brown\\',\\n      age: 32,\\n      address: \\'New York Park\\',\\n    },\\n    {\\n      key: \\'2\\',\\n      name: \\'Jim Green\\',\\n      age: 40,\\n      address: \\'London Park\\',\\n    },\\n  ]}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Table,\n      Button,\n      Dropdown,\n      Menu,\n      Icon,\n      Space,\n      Switch,\n      Help,\n      filterDropdownRender,\n      filterIconRender,\n      expandIconRender,\n      useSetColumn,\n      SetColumnButton,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Table rowKey=\"key\" scroll={{\n        x: '100%'\n      }} columns={[{\n        title: '姓名',\n        dataIndex: 'name',\n        width: 200,\n        fixed: 'left'\n      }, {\n        title: '年龄',\n        dataIndex: 'age',\n        width: 200,\n        fixed: 'left'\n      }, {\n        title: 'Column 1',\n        dataIndex: 'address',\n        width: 200\n      }, {\n        title: 'Column 2',\n        dataIndex: 'address',\n        width: 200\n      }, {\n        title: 'Column 3',\n        dataIndex: 'address',\n        width: 200\n      }, {\n        title: 'Column 4',\n        dataIndex: 'address',\n        width: 200\n      }, {\n        title: 'Column 5',\n        dataIndex: 'address',\n        width: 200\n      }, {\n        title: 'Column 6',\n        dataIndex: 'address',\n        width: 200\n      }, {\n        title: '住址',\n        dataIndex: 'address',\n        width: 200,\n        fixed: 'right'\n      }]} dataSource={[{\n        key: '1',\n        name: 'John Brown',\n        age: 32,\n        address: 'New York Park'\n      }, {\n        key: '2',\n        name: 'Jim Green',\n        age: 40,\n        address: 'London Park'\n      }]} mdxType=\"Table\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"设置表头\"\n    }}>{`设置表头`}</h3>\n    <Playground __position={9} __code={'() => {\\n  const { columns, ...props } = useSetColumn({\\n    columns: [\\n      {\\n        title: \\'姓名\\',\\n        dataIndex: \\'name\\',\\n        columnsOpts: {\\n          disabled: false,\\n          defaultChecked: true,\\n        },\\n      },\\n      {\\n        title: \\'年龄\\',\\n        dataIndex: \\'age\\',\\n        columnsOpts: {\\n          disabled: false,\\n          defaultChecked: false,\\n        },\\n      },\\n      {\\n        title: \\'住址\\',\\n        dataIndex: \\'address\\',\\n        columnsOpts: {\\n          disabled: true,\\n          defaultChecked: true,\\n        },\\n      },\\n    ],\\n    id: \\'table-demo\\',\\n    userUid: \\'string\\',\\n    version: \\'1.0.0\\',\\n  })\\n  return (\\n    <Space direction=\\\"vertical\\\" style={{ width: \\'100%\\' }}>\\n      <Button.Group size=\\\"s\\\">\\n        <SetColumnButton {...props} />\\n        <Button\\n          type=\\\"normal\\\"\\n          icon={<Icon type=\\\"general/Sync\\\" />}\\n          width={56}\\n        />\\n      </Button.Group>\\n      <Table rowKey=\\\"key\\\" columns={columns} dataSource={[]} />\\n    </Space>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Table,\n      Button,\n      Dropdown,\n      Menu,\n      Icon,\n      Space,\n      Switch,\n      Help,\n      filterDropdownRender,\n      filterIconRender,\n      expandIconRender,\n      useSetColumn,\n      SetColumnButton,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const {\n          columns,\n          ...props\n        } = useSetColumn({\n          columns: [{\n            title: '姓名',\n            dataIndex: 'name',\n            columnsOpts: {\n              disabled: false,\n              defaultChecked: true\n            }\n          }, {\n            title: '年龄',\n            dataIndex: 'age',\n            columnsOpts: {\n              disabled: false,\n              defaultChecked: false\n            }\n          }, {\n            title: '住址',\n            dataIndex: 'address',\n            columnsOpts: {\n              disabled: true,\n              defaultChecked: true\n            }\n          }],\n          id: 'table-demo',\n          userUid: 'string',\n          version: '1.0.0'\n        });\n        return <Space direction=\"vertical\" style={{\n          width: '100%'\n        }} mdxType=\"Space\">\n        <Button.Group size=\"s\">\n          <SetColumnButton {...props} mdxType=\"SetColumnButton\" />\n          <Button type=\"normal\" icon={<Icon type=\"general/Sync\" mdxType=\"Icon\" />} width={56} mdxType=\"Button\" />\n        </Button.Group>\n        <Table rowKey=\"key\" columns={columns} dataSource={[]} mdxType=\"Table\" />\n      </Space>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://ant.design/components/table-cn/\"\n      }}>{`Ant Design Table API`}</a></p>\n    <h3 {...{\n      \"id\": \"tableselection多选单选操作\"\n    }}>{`Table.selection（多选、单选操作）`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`  selection?: {\n    type?: 'checkbox' | 'radio'; //默认checkbox\n    defaultSelectedRowKeys?: string[];\n    onChange?: (selectedRowKeys: string[], selectedRows: T[]) => void;\n    operation?: (\n      selectedRowKeys: string[],\n      selectedRows: T[]\n    ) => React.ReactElement[];\n  };\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"usesetcolumn\"\n    }}>{`useSetColumn`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`    const { columns,  columnsConfig, setColumnsConfig } = useSetColumn({\n      columns: [\n        {\n          title: '姓名',\n          dataIndex: 'name',\n          columnsOpts: {  //在原本的columns里增加了这个配置\n            disabled: false,\n            defaultChecked: true,\n          },\n        },\n        ...\n      ],\n      id: 'table-demo', //应全局唯一\n      userUid: 'string', //绑定在user层面\n      version: '1.0.0', //columns配置更新后更新版本\n    });\n\n    <SetColumnButton columnsConfig={columnsConfig} setColumnsConfig={setColumnsConfig}/> //可以传Button的各种属性，可以放在ButtonGroup下使用\n`}</code></pre>\n    <p>{`注：提供的一些组件、方法从 table 中引入`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import {\n  Help,\n  filterDropdownRender,\n  filterIconRender,\n  expandIconRender,\n  useSetColumn,\n  SetColumnButton,\n} from '@zenlayer/zen-design/esm/table';\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}