{"version":3,"sources":["webpack:///../components/select-location/index.mdx"],"names":["_frontmatter","Object","isExtensible","prototype","hasOwnProperty","call","defineProperty","configurable","value","name","filename","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","Playground","__position","__code","__scope","Props","SelectLocation","_SelectLocation","Button","_Button","Elevation","_Elevation","Typography","_Typography","Icon","_Icon","options","setOptions","React","setValue","window","setTimeout","map","a","key","label","data","children","b","keywords","c","idx","discount","stockLimited","labelSuffix","index","showInCitySuffix","element","Text","type","style","display","fontSize","padding","mode","filterOptions","onMatch","_ref2","location","_ref3","city","endsWith","placeholder","onChange","v","d","console","log","size","onClick","parentName","isMDXComponent"],"mappings":"2aAQaA,EAAe,QAAG,IAAAA,UAAAC,OAAAD,IAAAC,OAAAC,aAAAF,KAAAC,OAAAE,UAAAC,eAAAC,KAAAL,EAAA,eAAAC,OAAAK,eAAAN,EAAA,cAAAO,cAAA,EAAAC,MAAA,CAAAC,KAAA,eAAAC,SAAA,0CAC/B,MAAMC,EAAc,CAClBX,gBAEIY,EAAYC,IACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,EAAKC,YAAAH,EAAAI,GAER,OAAOC,YAACR,EAASS,YAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,cAI5EF,YAAA,MACE,GAAM,kBAAgB,kBAExBA,YAAA,MACE,GAAM,QAAM,QAEdA,YAACG,IAAU,CAACC,WAAY,EAAGC,OAAQ,ynFAAkqFC,QAAS,CAC5sFT,QACAJ,kBACAU,eACAI,UACAC,eAAcC,IACdC,OAAMC,IACNC,UAASC,IACTC,WAAUC,IACVC,KAAIC,IACJxB,kBACAb,gBACCsB,QAAQ,cACZ,KACK,MACOgB,EAASC,GAAcC,WAAe,KACtChC,EAAOiC,GAAYD,WAA4C,YAqCtE,OApCAA,YAAgB,KACdE,OAAOC,WAAW,KAChBJ,EAAW,CAAC,OAAQ,aAAc,SAAU,UAAUK,IAAIC,IACjD,CACLC,IAAKD,EACLE,MAAOF,EACPG,KAAM,MACNC,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAIL,IAAIM,IACxC,CACLJ,IAAQD,EAAC,IAAIK,EACbH,MAAUF,EAAC,IAAIK,EACfC,SAAgB,IAAND,EAAU,CAAC,QAAU,GAC/BD,SAAU,CAAC,EAAG,EAAG,GAAGL,IAAI,CAACQ,EAAGC,KACnB,CACLP,IAAQD,EAAC,IAAIK,EAAC,IAAIE,EAClBL,MAAUF,EAAC,IAAIK,EAAC,IAAIE,EACpBE,SAAUD,EAAM,GAAM,EAAI,GAAK,IAC/BE,aAAsB,IAARF,EACdG,YAAqB,IAARH,EAAY,CAAC,CACxBI,MAAO,EACPC,kBAAkB,EAClBC,QAASvC,YAAAe,IAAYyB,KAAI,CAACC,KAAK,WACrBzC,YAAAiB,IAAA,CAAMwB,KAAK,mBAAmBC,MAAO,CAC3CC,QAAS,QACTC,SAAU,QACT1C,QAAQ,YAEV,cAOhB,MACF,IACIF,YAAAa,IAAA,CAAW4B,KAAM,EAAGI,QAAQ,MAAM3C,QAAQ,aACjDF,YAAAS,IAAA,CAAgBqC,KAxCH,OAwCeC,cAAe,CAAC,CACxCrB,IAAK,IACLC,MAAO,OACPqB,QAASC,IAAA,IAAC,SACRC,GACDD,EAAA,OAAKC,EAAShB,SAAW,MACzB,CACDR,IAAK,IACLC,MAAO,KACPqB,QAASG,IAAA,IAAC,KACRC,GACDD,EAAA,OAAKC,EAAKzB,MAAM0B,SAAS,WACxBjE,MAAOA,EAAO8B,QAASA,EAASoC,YAAa,WAAYC,SAAUA,CAACC,EAAGC,KACzEpC,EAASmC,GACTE,QAAQC,IAAI,SAAUH,EAAGC,IACxBvD,QAAQ,mBACbF,YAAAW,IAAA,CAAQiD,KAAK,IAAIC,QAASA,KACtBxC,EAAS,aACRnB,QAAQ,UAAS,UAM1BF,YAAA,MACE,GAAM,OAAK,OAEbA,YAAA,aACEA,YAAA,SAAO8D,WAAW,SAChB9D,YAAA,MAAI8D,WAAW,SACb9D,YAAA,MAAI8D,WAAW,KACb,MAAS,MAAI,MAEf9D,YAAA,MAAI8D,WAAW,KACb,MAAS,MAAI,MAEf9D,YAAA,MAAI8D,WAAW,KACb,MAAS,MAAI,MAEf9D,YAAA,MAAI8D,WAAW,KACb,MAAS,MAAI,SAInB9D,YAAA,SAAO8D,WAAW,SAChB9D,YAAA,MAAI8D,WAAW,SACb9D,YAAA,MAAI8D,WAAW,KACb,MAAS,MAAI,QAEf9D,YAAA,MAAI8D,WAAW,KACb,MAAS,MAAI,uBAEf9D,YAAA,MAAI8D,WAAW,KACb,MAAS,MAAI,yBAEf9D,YAAA,MAAI8D,WAAW,KACb,MAAS,MAAI,WAGjB9D,YAAA,MAAI8D,WAAW,SACb9D,YAAA,MAAI8D,WAAW,KACb,MAAS,MAAI,gBAEf9D,YAAA,MAAI8D,WAAW,KACb,MAAS,MAAI,OAEf9D,YAAA,MAAI8D,WAAW,KACb,MAAS,MAAI,UAEf9D,YAAA,MAAI8D,WAAW,KACb,MAAS,MAAI,MAGjB9D,YAAA,MAAI8D,WAAW,SACb9D,YAAA,MAAI8D,WAAW,KACb,MAAS,MAAI,SAEf9D,YAAA,MAAI8D,WAAW,KACb,MAAS,MAAI,KAEf9D,YAAA,MAAI8D,WAAW,KACb,MAAS,MAAI,UAEf9D,YAAA,MAAI8D,WAAW,KACb,MAAS,MAAI,MAGjB9D,YAAA,MAAI8D,WAAW,SACb9D,YAAA,MAAI8D,WAAW,KACb,MAAS,MAAI,WAEf9D,YAAA,MAAI8D,WAAW,KACb,MAAS,MAAI,QAEf9D,YAAA,MAAI8D,WAAW,KACb,MAAS,MAAI,YAEf9D,YAAA,MAAI8D,WAAW,KACb,MAAS,MAAI,MAGjB9D,YAAA,MAAI8D,WAAW,SACb9D,YAAA,MAAI8D,WAAW,KACb,MAAS,MAAI,YAEf9D,YAAA,MAAI8D,WAAW,KACb,MAAS,MAAI,WAEf9D,YAAA,MAAI8D,WAAW,KACb,MAAS,MAAI,2BAEf9D,YAAA,MAAI8D,WAAW,KACb,MAAS,MAAI,cAOxB,IAAApE,UAAAb,OAAAa,IAAAb,OAAAC,aAAAY,KAAAb,OAAAE,UAAAC,eAAAC,KAAAS,EAAA,eAAAb,OAAAK,eAAAQ,EAAA,cAAAP,cAAA,EAAAC,MAAA,CAAAC,KAAA,aAAAC,SAAA,0CAEDI,EAAWqE,gBAAiB","file":"component---components-select-location-index-mdx-2e9290a65f11742dd10d.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dylan.zhu/Documents/HZ_FE/zen-design/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { SelectLocation, Button, Elevation, Typography, Icon } from '@zenlayer/zen-design'; // 引入组件\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"selectlocation\"\n    }}>{`SelectLocation`}</h1>\n    <h3 {...{\n      \"id\": \"基本用法\"\n    }}>{`基本用法`}</h3>\n    <Playground __position={0} __code={'() => {\\n  const mode = \\'zone\\'\\n  const [options, setOptions] = React.useState([])\\n  const [value, setValue] = React.useState(\\n    mode === \\'city\\' ? \\'Asia-5\\' : \\'Asia-5-1\\',\\n  )\\n  React.useEffect(() => {\\n    window.setTimeout(() => {\\n      setOptions(\\n        [\\'Asia\\', \\'MiddleEast\\', \\'Europe\\', \\'Africa\\'].map(a => {\\n          return {\\n            key: a,\\n            label: a,\\n            data: \\'123\\',\\n            children: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(b => {\\n              return {\\n                key: `${a}-${b}`,\\n                label: `${a}-${b}`,\\n                keywords: b === 2 ? [\\'jian\\'] : [],\\n                children: [0, 1, 2].map((c, idx) => {\\n                  return {\\n                    key: `${a}-${b}-${c}`,\\n                    label: `${a}-${b}-${c}`,\\n                    discount: idx % 2 === 0 ? 80 : 100,\\n                    stockLimited: idx === 0,\\n                    labelSuffix:\\n                      idx === 0\\n                        ? [\\n                            {\\n                              index: 0,\\n                              showInCitySuffix: true,\\n                              element: (\\n                                <Typography.Text type=\\\"primary\\\">\\n                                  <Icon\\n                                    type=\\\"general/SafeFill\\\"\\n                                    style={{\\n                                      display: \\'block\\',\\n                                      fontSize: \\'16px\\',\\n                                    }}\\n                                  />\\n                                </Typography.Text>\\n                              ),\\n                            },\\n                          ]\\n                        : [],\\n                  }\\n                }),\\n              }\\n            }),\\n          }\\n        }),\\n      )\\n    }, 1000)\\n  }, [])\\n  return (\\n    <Elevation type={3} padding=\\\"lll\\\">\\n      <SelectLocation\\n        mode={mode}\\n        filterOptions={[\\n          {\\n            key: \\'1\\',\\n            label: \\'Sale\\',\\n            onMatch: ({ location }) => location.discount < 100,\\n          },\\n          {\\n            key: \\'2\\',\\n            label: \\'-1\\',\\n            onMatch: ({ city }) => city.label.endsWith(\\'-100\\'),\\n          },\\n        ]}\\n        value={value}\\n        options={options}\\n        placeholder={\\'自定义空状态内容\\'}\\n        onChange={(v, d) => {\\n          setValue(v)\\n          console.log(\\'value:\\', v, d)\\n        }}\\n      />\\n      <Button\\n        size=\\\"s\\\"\\n        onClick={() => {\\n          setValue(\\'Asia-4-1\\')\\n        }}\\n      >\\n        SET\\n      </Button>\\n    </Elevation>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      SelectLocation,\n      Button,\n      Elevation,\n      Typography,\n      Icon,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const mode = 'zone';\n        const [options, setOptions] = React.useState([]);\n        const [value, setValue] = React.useState(mode === 'city' ? 'Asia-5' : 'Asia-5-1');\n        React.useEffect(() => {\n          window.setTimeout(() => {\n            setOptions(['Asia', 'MiddleEast', 'Europe', 'Africa'].map(a => {\n              return {\n                key: a,\n                label: a,\n                data: '123',\n                children: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(b => {\n                  return {\n                    key: `${a}-${b}`,\n                    label: `${a}-${b}`,\n                    keywords: b === 2 ? ['jian'] : [],\n                    children: [0, 1, 2].map((c, idx) => {\n                      return {\n                        key: `${a}-${b}-${c}`,\n                        label: `${a}-${b}-${c}`,\n                        discount: idx % 2 === 0 ? 80 : 100,\n                        stockLimited: idx === 0,\n                        labelSuffix: idx === 0 ? [{\n                          index: 0,\n                          showInCitySuffix: true,\n                          element: <Typography.Text type=\"primary\">\n                                    <Icon type=\"general/SafeFill\" style={{\n                              display: 'block',\n                              fontSize: '16px'\n                            }} mdxType=\"Icon\" />\n                                  </Typography.Text>\n                        }] : []\n                      };\n                    })\n                  };\n                })\n              };\n            }));\n          }, 1000);\n        }, []);\n        return <Elevation type={3} padding=\"lll\" mdxType=\"Elevation\">\n        <SelectLocation mode={mode} filterOptions={[{\n            key: '1',\n            label: 'Sale',\n            onMatch: ({\n              location\n            }) => location.discount < 100\n          }, {\n            key: '2',\n            label: '-1',\n            onMatch: ({\n              city\n            }) => city.label.endsWith('-100')\n          }]} value={value} options={options} placeholder={'自定义空状态内容'} onChange={(v, d) => {\n            setValue(v);\n            console.log('value:', v, d);\n          }} mdxType=\"SelectLocation\" />\n        <Button size=\"s\" onClick={() => {\n            setValue('Asia-4-1');\n          }} mdxType=\"Button\">\n          SET\n        </Button>\n      </Elevation>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`属性`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`mode`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`模式(选择 city 还是 zone)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`'city' `}{`|`}{` 'zone'`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`'zone'`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`defaultValue`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`value`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`值`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`options`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`地区选项`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Region[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`地区改变时回调`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(value: string) => void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}