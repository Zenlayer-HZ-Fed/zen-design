{"version":3,"sources":["webpack:///../components/modal/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","Modal","Button","React","visible","setVisible","onClick","title","subTitle","closable","onOk","onCancel","footer","type","okButtonText","cancelButtonText","okButtonProps","danger","cancelButtonProps","white","a","Promise","resolve","then","reject","setTimeout","open","useModal","content","buttonChild","size","parentName","isMDXComponent"],"mappings":"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","file":"component---components-modal-index-mdx-16323a374bab5adf3fb5.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dylan.zhu/Documents/HZ_FE/zen-design/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Modal, Button } from '@zenlayer/zen-design'; // 引入组件\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"modal-对话框\"\n    }}>{`Modal 对话框`}</h1>\n    <p>{`模态对话框。`}</p>\n    <h2 {...{\n      \"id\": \"何时使用\"\n    }}>{`何时使用`}</h2>\n    <p>{`需要用户处理事务，又不希望跳转页面以致打断工作流程时，可以使用 Modal 在当前页面正中打开一个浮层，承载相应的操作。`}</p>\n    <h2 {...{\n      \"id\": \"基本用法\"\n    }}>{`基本用法`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [visible, setVisible] = React.useState(false)\\n  return (\\n    <>\\n      <Button\\n        onClick={() => {\\n          setVisible(true)\\n        }}\\n      >\\n        Open Modal\\n      </Button>\\n      <Modal\\n        visible={visible}\\n        title=\\\"第一个demo\\\"\\n        subTitle=\\\"SubTitle 1-2\\\"\\n        closable\\n        onOk={() => {\\n          setVisible(false)\\n        }}\\n        onCancel={() => {\\n          setVisible(false)\\n        }}\\n      >\\n        <div>content content content</div>\\n      </Modal>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Modal,\n      Button,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visible, setVisible] = React.useState(false);\n        return <>\n        <Button onClick={() => {\n            setVisible(true);\n          }} mdxType=\"Button\">\n          Open Modal\n        </Button>\n        <Modal visible={visible} title=\"第一个demo\" subTitle=\"SubTitle 1-2\" closable onOk={() => {\n            setVisible(false);\n          }} onCancel={() => {\n            setVisible(false);\n          }} mdxType=\"Modal\">\n          <div>content content content</div>\n        </Modal>\n      </>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"自定义页脚\"\n    }}>{`自定义页脚`}</h3>\n    <Playground __position={1} __code={'() => {\\n  const [visible, setVisible] = React.useState(false)\\n  return (\\n    <>\\n      <Button\\n        onClick={() => {\\n          setVisible(true)\\n        }}\\n      >\\n        Open Modal\\n      </Button>\\n      <Modal\\n        visible={visible}\\n        title=\\\"第二个demo\\\"\\n        footer={\\n          <div>\\n            <Button\\n              type=\\\"normal\\\"\\n              onClick={() => {\\n                setVisible(false)\\n              }}\\n            >\\n              Return\\n            </Button>\\n            <Button\\n              onClick={() => {\\n                setVisible(false)\\n              }}\\n            >\\n              Submit\\n            </Button>\\n          </div>\\n        }\\n      >\\n        <div>content content content</div>\\n      </Modal>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Modal,\n      Button,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visible, setVisible] = React.useState(false);\n        return <>\n        <Button onClick={() => {\n            setVisible(true);\n          }} mdxType=\"Button\">\n          Open Modal\n        </Button>\n        <Modal visible={visible} title=\"第二个demo\" footer={<div>\n              <Button type=\"normal\" onClick={() => {\n              setVisible(false);\n            }} mdxType=\"Button\">\n                Return\n              </Button>\n              <Button onClick={() => {\n              setVisible(false);\n            }} mdxType=\"Button\">\n                Submit\n              </Button>\n            </div>} mdxType=\"Modal\">\n          <div>content content content</div>\n        </Modal>\n      </>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"设置按钮文字和属性\"\n    }}>{`设置按钮文字和属性`}</h3>\n    <Playground __position={2} __code={'() => {\\n  const [visible, setVisible] = React.useState(false)\\n  return (\\n    <>\\n      <Button\\n        onClick={() => {\\n          setVisible(true)\\n        }}\\n      >\\n        Open Modal\\n      </Button>\\n      <Modal\\n        visible={visible}\\n        title=\\\"第三个demo\\\"\\n        onOk={() => {\\n          setVisible(false)\\n        }}\\n        onCancel={() => {\\n          setVisible(false)\\n        }}\\n        okButtonText=\\\"确认\\\"\\n        cancelButtonText=\\\"取消\\\"\\n        okButtonProps={{ danger: true }}\\n        cancelButtonProps={{ white: true }}\\n      >\\n        <div>content content content</div>\\n      </Modal>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Modal,\n      Button,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visible, setVisible] = React.useState(false);\n        return <>\n        <Button onClick={() => {\n            setVisible(true);\n          }} mdxType=\"Button\">\n          Open Modal\n        </Button>\n        <Modal visible={visible} title=\"第三个demo\" onOk={() => {\n            setVisible(false);\n          }} onCancel={() => {\n            setVisible(false);\n          }} okButtonText=\"确认\" cancelButtonText=\"取消\" okButtonProps={{\n            danger: true\n          }} cancelButtonProps={{\n            white: true\n          }} mdxType=\"Modal\">\n          <div>content content content</div>\n        </Modal>\n      </>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"异步关闭\"\n    }}>{`异步关闭`}</h3>\n    <Playground __position={3} __code={'() => {\\n  const [visible, setVisible] = React.useState(false)\\n  return (\\n    <>\\n      <Button\\n        onClick={() => {\\n          setVisible(true)\\n        }}\\n      >\\n        Open Modal\\n      </Button>\\n      <Modal\\n        visible={visible}\\n        title=\\\"第四个demo\\\"\\n        closable\\n        onOk={async () => {\\n          return Promise.resolve({\\n            then: function(resolve, reject) {\\n              setTimeout(() => {\\n                setVisible(false)\\n                resolve(true)\\n              }, 10000)\\n            },\\n          })\\n        }} //两种写法，1.async函数，return boolean，2.return Promise函数\\n        onCancel={() => {\\n          setVisible(false)\\n        }}\\n      >\\n        <div>content content content</div>\\n      </Modal>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Modal,\n      Button,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visible, setVisible] = React.useState(false);\n        return <>\n        <Button onClick={() => {\n            setVisible(true);\n          }} mdxType=\"Button\">\n          Open Modal\n        </Button>\n        <Modal visible={visible} title=\"第四个demo\" closable onOk={async () => {\n            return Promise.resolve({\n              then: function (resolve, reject) {\n                setTimeout(() => {\n                  setVisible(false);\n                  resolve(true);\n                }, 10000);\n              }\n            });\n          }} //两种写法，1.async函数，return boolean，2.return Promise函数\n          onCancel={() => {\n            setVisible(false);\n          }} mdxType=\"Modal\">\n          <div>content content content</div>\n        </Modal>\n      </>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"usemodal\"\n    }}>{`useModal`}</h3>\n    <Playground __position={4} __code={'() => {\\n  const [{ open }] = Modal.useModal()\\n  return (\\n    <a\\n      onClick={() => {\\n        open({\\n          title: \\'第四个demo\\',\\n          content: \\'content content content\\',\\n          onOk: () => {\\n            return Promise.resolve({\\n              then: function(resolve, reject) {\\n                setTimeout(() => {\\n                  resolve(true)\\n                }, 10000)\\n              },\\n            })\\n          }, //两种写法，1.async函数，return boolean，2.return Promise函数\\n        })\\n      }}\\n    >\\n      open\\n    </a>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Modal,\n      Button,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [{\n          open\n        }] = Modal.useModal();\n        return <a onClick={() => {\n          open({\n            title: '第四个demo',\n            content: 'content content content',\n            onOk: () => {\n              return Promise.resolve({\n                then: function (resolve, reject) {\n                  setTimeout(() => {\n                    resolve(true);\n                  }, 10000);\n                }\n              });\n            } //两种写法，1.async函数，return boolean，2.return Promise函数\n\n          });\n        }}>\n        open\n      </a>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"button-child\"\n    }}>{`Button Child`}</h3>\n    <Playground __position={5} __code={'() => {\\n  const [visible, setVisible] = React.useState(false)\\n  return (\\n    <>\\n      <Button\\n        onClick={() => {\\n          setVisible(true)\\n        }}\\n      >\\n        Open Modal\\n      </Button>\\n      <Modal\\n        visible={visible}\\n        title=\\\"Button demo\\\"\\n        closable\\n        buttonChild={\\n          <div>\\n            <Button size=\\\"s\\\">test</Button>\\n          </div>\\n        }\\n        footer={\\n          <div>\\n            <Button\\n              type=\\\"normal\\\"\\n              onClick={() => {\\n                setVisible(false)\\n              }}\\n            >\\n              Return\\n            </Button>\\n            <Button\\n              onClick={() => {\\n                setVisible(false)\\n              }}\\n            >\\n              Submit\\n            </Button>\\n          </div>\\n        }\\n      >\\n        <div>content content content</div>\\n      </Modal>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Modal,\n      Button,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visible, setVisible] = React.useState(false);\n        return <>\n        <Button onClick={() => {\n            setVisible(true);\n          }} mdxType=\"Button\">\n          Open Modal\n        </Button>\n        <Modal visible={visible} title=\"Button demo\" closable buttonChild={<div>\n              <Button size=\"s\" mdxType=\"Button\">test</Button>\n            </div>} footer={<div>\n              <Button type=\"normal\" onClick={() => {\n              setVisible(false);\n            }} mdxType=\"Button\">\n                Return\n              </Button>\n              <Button onClick={() => {\n              setVisible(false);\n            }} mdxType=\"Button\">\n                Submit\n              </Button>\n            </div>} mdxType=\"Modal\">\n          <div>content content content</div>\n        </Modal>\n      </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <h3 {...{\n      \"id\": \"modalusemodal0open-共用\"\n    }}>{`Modal、useModal`}{`[0]`}{`.open 共用`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`属性`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`title`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`标题`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`ReactNode`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`subTitle`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`子标题`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`ReactNode`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`closable`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`是否显示右上角的关闭按钮`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`okButtonText`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`确认按钮文字,不要此按钮时设置为 null`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}{`|`}{`null`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"Confirm\"`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`cancelButtonText`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`取消按钮文字,不要此按钮时设置为 null`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}{`|`}{`null`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"Cancel\"`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`okButtonProps`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`确认按钮 props`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`ButtonProps`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`cancelButtonProps`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`取消按钮 props`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`ButtonProps`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onOk`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`点击确定回调，函数为 promise 或者返回 promise 时，会自动展示 Loading；非受控或者使用 useModal`}{`[0]`}{`.open 时，返回 true 或者返回 promise 执行 resolve 后自动关闭`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(data) => boolean `}{`|`}{` Promise<boolean`}{`>`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onCancel`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`取消回调`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`()=>void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`footer`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`底部内容`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`ReactNode`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`centered`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`垂直居中展示 Modal`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`width`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`弹窗宽度`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`zIndex`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`设置 Modal 的 z-index`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`1000`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`自定义 CSS className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`style`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`自定义内联样式`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`CSSProperties`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"modal\"\n    }}>{`Modal`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`属性`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`defaultVisible`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`初始对话框是否可见`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`visible`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`对话框是否可见`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onVisibleChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`对话框显隐回调`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(visible:boolean)=>void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`destroyOnClose`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`对话框关闭时销毁 dom`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`buttonChild`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`对话框右上角按钮区域`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`React.ReactElement[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"usemodal0open\"\n    }}>{`useModal`}{`[0]`}{`.open`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`属性`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`content`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`内容`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`React.ReactNode`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <pre><code parentName=\"pre\" {...{}}>{`    const [{ open,close },contextHolder] = Modal.useModal();\n    return (\n      <a\n        onClick={() => {\n          open({\n            title: 'demo',\n            content: 'content content content',\n            onOk: async() => {\n             const {success} =  await run()\n             return success\n            },\n          });\n        }}\n      >\n        open\n      </a>\n    );\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}