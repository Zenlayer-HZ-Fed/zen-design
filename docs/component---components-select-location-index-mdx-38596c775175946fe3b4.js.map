{"version":3,"sources":["webpack:///../components/select-location/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","SelectLocation","Button","Elevation","React","options","setOptions","value","setValue","window","setTimeout","map","a","key","label","data","children","b","discount","c","idx","stockLimited","type","padding","mode","placeholder","onChange","v","d","console","log","size","onClick","parentName","isMDXComponent"],"mappings":"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","file":"component---components-select-location-index-mdx-38596c775175946fe3b4.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dylan.zhu/Documents/HZ_FE/zen-design/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { SelectLocation, Button, Elevation } from '@zenlayer/zen-design'; // 引入组件\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"selectlocation\"\n    }}>{`SelectLocation`}</h1>\n    <h3 {...{\n      \"id\": \"基本用法\"\n    }}>{`基本用法`}</h3>\n    <Playground __position={0} __code={'() => {\\n  const mode = \\'zone\\'\\n  const [options, setOptions] = React.useState([])\\n  const [value, setValue] = React.useState(\\n    mode === \\'city\\' ? \\'Asia-5\\' : \\'Asia-5-1\\',\\n  )\\n  React.useEffect(() => {\\n    window.setTimeout(() => {\\n      setOptions(\\n        [\\'Asia\\', \\'MiddleEast\\', \\'Europe\\', \\'Africa\\'].map(a => {\\n          return {\\n            key: a,\\n            label: a,\\n            data: \\'123\\',\\n            children: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(b => {\\n              return {\\n                key: `${a}-${b}`,\\n                label: `${a}-${b}`,\\n                discount: 90,\\n                children: [0, 1, 2].map((c, idx) => {\\n                  return {\\n                    key: `${a}-${b}-${c}`,\\n                    label: `${a}-${b}-${c}`,\\n                    discount: idx % 2 === 0 ? 80 : false,\\n                    stockLimited: idx % 3 === 0,\\n                  }\\n                }),\\n              }\\n            }),\\n          }\\n        }),\\n      )\\n    }, 1000)\\n  }, [])\\n  return (\\n    <Elevation type={3} padding=\\\"lll\\\">\\n      <SelectLocation\\n        mode={mode}\\n        value={value}\\n        options={options}\\n        placeholder={\\'123\\'}\\n        onChange={(v, d) => {\\n          setValue(v)\\n          console.log(\\'value:\\', v, d)\\n        }}\\n      />\\n      <Button\\n        size=\\\"s\\\"\\n        onClick={() => {\\n          setValue(\\'Asia-4-1\\')\\n        }}\\n      >\\n        SET\\n      </Button>\\n    </Elevation>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      SelectLocation,\n      Button,\n      Elevation,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const mode = 'zone';\n        const [options, setOptions] = React.useState([]);\n        const [value, setValue] = React.useState(mode === 'city' ? 'Asia-5' : 'Asia-5-1');\n        React.useEffect(() => {\n          window.setTimeout(() => {\n            setOptions(['Asia', 'MiddleEast', 'Europe', 'Africa'].map(a => {\n              return {\n                key: a,\n                label: a,\n                data: '123',\n                children: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(b => {\n                  return {\n                    key: `${a}-${b}`,\n                    label: `${a}-${b}`,\n                    discount: 90,\n                    children: [0, 1, 2].map((c, idx) => {\n                      return {\n                        key: `${a}-${b}-${c}`,\n                        label: `${a}-${b}-${c}`,\n                        discount: idx % 2 === 0 ? 80 : false,\n                        stockLimited: idx % 3 === 0\n                      };\n                    })\n                  };\n                })\n              };\n            }));\n          }, 1000);\n        }, []);\n        return <Elevation type={3} padding=\"lll\" mdxType=\"Elevation\">\n        <SelectLocation mode={mode} value={value} options={options} placeholder={'123'} onChange={(v, d) => {\n            setValue(v);\n            console.log('value:', v, d);\n          }} mdxType=\"SelectLocation\" />\n        <Button size=\"s\" onClick={() => {\n            setValue('Asia-4-1');\n          }} mdxType=\"Button\">\n          SET\n        </Button>\n      </Elevation>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`属性`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`mode`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`模式(选择 city 还是 zone)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`'city' `}{`|`}{` 'zone'`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`'zone'`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`defaultValue`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`value`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`值`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`options`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`地区选项`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Region[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`地区改变时回调`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(value: string) => void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}