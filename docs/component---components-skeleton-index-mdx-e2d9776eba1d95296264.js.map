{"version":3,"sources":["webpack:///../components/skeleton/index.mdx"],"names":["_frontmatter","Object","isExtensible","prototype","hasOwnProperty","call","defineProperty","configurable","value","name","filename","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","Playground","__position","__code","__scope","Props","Skeleton","_Skeleton","Button","_Button","Table","_Table","Space","_Space","Switch","_Switch","loading","setLoading","React","Node","rowKey","columns","title","dataIndex","width","align","dataSource","key","nickname","age","address","phoneLabel","undefined","phoneNumber","checked","onChange","parentName","isMDXComponent"],"mappings":"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","file":"component---components-skeleton-index-mdx-e2d9776eba1d95296264.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/dylan.zhu/Documents/HZ_FE/zen-design/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Skeleton, Button, Table, Space, Switch } from '@zenlayer/zen-design'; // 引入组件\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"skeleton-骨架屏\"\n    }}>{`Skeleton 骨架屏`}</h1>\n    <p>{`在需要等待加载内容的位置提供一个占位图形组合。`}</p>\n    <h2 {...{\n      \"id\": \"何时使用\"\n    }}>{`何时使用`}</h2>\n    <p>{`1.网络较慢，需要长时间等待加载处理的情况下。 2.图文信息内容较多的列表/卡片中。 3.只在第一次加载数据的时候使用。 4.可以被 Spin 完全代替，但是在可用的场景下可以比 Spin 提供更好的视觉效果和用户体验。`}</p>\n    <h2 {...{\n      \"id\": \"基本用法\"\n    }}>{`基本用法`}</h2>\n    <h3 {...{\n      \"id\": \"基本\"\n    }}>{`基本`}</h3>\n    <Playground __position={0} __code={'() => {\\n  const [loading, setLoading] = React.useState(true)\\n  return (\\n    <div>\\n      <div>button:</div>\\n      <div>\\n        <Skeleton.Button loading={loading}>\\n          <Button>test</Button>\\n        </Skeleton.Button>\\n      </div>\\n      <div>node:</div>\\n      <div>\\n        <Skeleton.Node loading={loading}>\\n          <Button>test</Button>\\n        </Skeleton.Node>\\n      </div>\\n      <div>\\n        <Skeleton.Node loading={loading}>\\n          <Table\\n            rowKey=\\\"key\\\"\\n            columns={[\\n              {\\n                title: \\'姓名/外号\\',\\n                dataIndex: \\'name\\',\\n                width: 200,\\n              },\\n              {\\n                title: \\'年龄\\',\\n                dataIndex: \\'age\\',\\n              },\\n              {\\n                title: \\'住址\\',\\n                dataIndex: \\'address\\',\\n              },\\n              {\\n                title: \\'联系方式\\',\\n                dataIndex: \\'phoneNumber\\',\\n                width: 200,\\n              },\\n              {\\n                title: \\'Action\\',\\n                dataIndex: \\'action\\',\\n                align: \\'center\\',\\n                width: 200,\\n              },\\n            ]}\\n            dataSource={[\\n              {\\n                key: \\'1\\',\\n                name: \\'胡彦斌\\',\\n                nickname: \\'小帅哥\\',\\n                age: 32,\\n                address: \\'西湖区湖底公园1号\\',\\n                phoneLabel: undefined,\\n                phoneNumber: undefined,\\n              },\\n              {\\n                key: \\'2\\',\\n                name: \\'胡彦祖\\',\\n                nickname: \\'大帅哥\\',\\n                age: 42,\\n                address: \\'西湖区湖底公园1号\\',\\n                phoneLabel: \\'靓号\\',\\n                phoneNumber: \\'18518300669\\',\\n              },\\n            ]}\\n          />\\n        </Skeleton.Node>\\n      </div>\\n      <div>\\n        <Switch checked={loading} onChange={setLoading} />\\n      </div>\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Skeleton,\n      Button,\n      Table,\n      Space,\n      Switch,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [loading, setLoading] = React.useState(true);\n        return <div>\n        <div>button:</div>\n        <div>\n          <Skeleton.Button loading={loading}>\n              <Button mdxType=\"Button\">test</Button>\n            </Skeleton.Button>\n        </div>\n        <div>node:</div>\n        <div>\n          <Skeleton.Node loading={loading}>\n            <Button mdxType=\"Button\">test</Button>\n          </Skeleton.Node>\n        </div>\n        <div>\n          <Skeleton.Node loading={loading}>\n            <Table rowKey=\"key\" columns={[{\n                title: '姓名/外号',\n                dataIndex: 'name',\n                width: 200\n              }, {\n                title: '年龄',\n                dataIndex: 'age'\n              }, {\n                title: '住址',\n                dataIndex: 'address'\n              }, {\n                title: '联系方式',\n                dataIndex: 'phoneNumber',\n                width: 200\n              }, {\n                title: 'Action',\n                dataIndex: 'action',\n                align: 'center',\n                width: 200\n              }]} dataSource={[{\n                key: '1',\n                name: '胡彦斌',\n                nickname: '小帅哥',\n                age: 32,\n                address: '西湖区湖底公园1号',\n                phoneLabel: undefined,\n                phoneNumber: undefined\n              }, {\n                key: '2',\n                name: '胡彦祖',\n                nickname: '大帅哥',\n                age: 42,\n                address: '西湖区湖底公园1号',\n                phoneLabel: '靓号',\n                phoneNumber: '18518300669'\n              }]} mdxType=\"Table\" />\n          </Skeleton.Node>\n        </div>\n        <div>\n          <Switch checked={loading} onChange={setLoading} mdxType=\"Switch\" />\n        </div>\n      </div>;\n      }}\n    </Playground>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`属性`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`自定义 CSS className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`style`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`自定义内联样式`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`CSSProperties`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}