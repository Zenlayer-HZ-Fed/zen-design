{"version":3,"sources":["webpack:///../components/skeleton/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","Skeleton","Button","Table","Space","Switch","React","loading","setLoading","Node","rowKey","columns","title","dataIndex","width","align","dataSource","key","name","nickname","age","address","phoneLabel","undefined","phoneNumber","checked","onChange","parentName","isMDXComponent"],"mappings":"yZAWaA,EAAe,Q,qOAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,gBADR,gBAGA,gDACA,kBACE,GAAM,QADR,QAGA,uIACA,kBACE,GAAM,QADR,QAGA,kBACE,GAAM,MADR,MAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,84DAAy7DC,SAAO,GACj+DJ,QACAH,kBACAQ,eACAC,UACAC,SAAQ,IACRC,OAAM,IACNC,MAAK,IACLC,MAAK,UACLC,OAAM,KAT29D,gBAUj+Dd,IAVi+D,EAWj+DH,eAXi+D,GAYh+DO,QAAQ,eACZ,WACK,MAA8BW,YAAe,GAAtCC,EAAP,KAAgBC,EAAhB,KACA,OAAO,uBACP,kCACA,uBACE,gBAAUN,OAAV,CAAiBK,QAASA,GACtB,iBAAQZ,QAAQ,UAAhB,UAGN,gCACA,uBACE,gBAAUc,KAAV,CAAeF,QAASA,GACtB,iBAAQZ,QAAQ,UAAhB,UAGJ,uBACE,gBAAUc,KAAV,CAAeF,QAASA,GACtB,iBAAOG,OAAO,MAAMC,QAAS,CAAC,CAC1BC,MAAO,QACPC,UAAW,OACXC,MAAO,KACN,CACDF,MAAO,KACPC,UAAW,OACV,CACDD,MAAO,KACPC,UAAW,WACV,CACDD,MAAO,OACPC,UAAW,cACXC,MAAO,KACN,CACDF,MAAO,SACPC,UAAW,SACXE,MAAO,SACPD,MAAO,MACLE,WAAY,CAAC,CACfC,IAAK,IACLC,KAAM,MACNC,SAAU,MACVC,IAAK,GACLC,QAAS,YACTC,gBAAYC,EACZC,iBAAaD,GACZ,CACDN,IAAK,IACLC,KAAM,MACNC,SAAU,MACVC,IAAK,GACLC,QAAS,YACTC,WAAY,KACZE,YAAa,gBACX7B,QAAQ,YAGlB,uBACE,iBAAQ8B,QAASlB,EAASmB,SAAUlB,EAAYb,QAAQ,gBAK9D,yBACE,qBAAOgC,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,MAGA,kBAAIA,WAAW,KACb,MAAS,MADX,MAGA,kBAAIA,WAAW,KACb,MAAS,MADX,MAGA,kBAAIA,WAAW,KACb,MAAS,MADX,SAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,aAGA,kBAAIA,WAAW,KACb,MAAS,MADX,qBAGA,kBAAIA,WAAW,KACb,MAAS,MADX,UAGA,kBAAIA,WAAW,KACb,MAAS,MADX,MAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,SAGA,kBAAIA,WAAW,KACb,MAAS,MADX,WAGA,kBAAIA,WAAW,KACb,MAAS,MADX,iBAGA,kBAAIA,WAAW,KACb,MAAS,MADX,c,mOAUVnC,EAAWoC,gBAAiB","file":"component---components-skeleton-index-mdx-e7e483ee97bbd9e70f0d.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dylan.zhu/Documents/HZ_FE/zen-design/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Skeleton, Button, Table, Space, Switch } from '@zenlayer/zen-design'; // 引入组件\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"skeleton-骨架屏\"\n    }}>{`Skeleton 骨架屏`}</h1>\n    <p>{`在需要等待加载内容的位置提供一个占位图形组合。`}</p>\n    <h2 {...{\n      \"id\": \"何时使用\"\n    }}>{`何时使用`}</h2>\n    <p>{`1.网络较慢，需要长时间等待加载处理的情况下。 2.图文信息内容较多的列表/卡片中。 3.只在第一次加载数据的时候使用。 4.可以被 Spin 完全代替，但是在可用的场景下可以比 Spin 提供更好的视觉效果和用户体验。`}</p>\n    <h2 {...{\n      \"id\": \"基本用法\"\n    }}>{`基本用法`}</h2>\n    <h3 {...{\n      \"id\": \"基本\"\n    }}>{`基本`}</h3>\n    <Playground __position={0} __code={'() => {\\n  const [loading, setLoading] = React.useState(true)\\n  return (\\n    <div>\\n      <div>button:</div>\\n      <div>\\n        <Skeleton.Button loading={loading}>\\n          <Button>test</Button>\\n        </Skeleton.Button>\\n      </div>\\n      <div>node:</div>\\n      <div>\\n        <Skeleton.Node loading={loading}>\\n          <Button>test</Button>\\n        </Skeleton.Node>\\n      </div>\\n      <div>\\n        <Skeleton.Node loading={loading}>\\n          <Table\\n            rowKey=\\\"key\\\"\\n            columns={[\\n              {\\n                title: \\'姓名/外号\\',\\n                dataIndex: \\'name\\',\\n                width: 200,\\n              },\\n              {\\n                title: \\'年龄\\',\\n                dataIndex: \\'age\\',\\n              },\\n              {\\n                title: \\'住址\\',\\n                dataIndex: \\'address\\',\\n              },\\n              {\\n                title: \\'联系方式\\',\\n                dataIndex: \\'phoneNumber\\',\\n                width: 200,\\n              },\\n              {\\n                title: \\'Action\\',\\n                dataIndex: \\'action\\',\\n                align: \\'center\\',\\n                width: 200,\\n              },\\n            ]}\\n            dataSource={[\\n              {\\n                key: \\'1\\',\\n                name: \\'胡彦斌\\',\\n                nickname: \\'小帅哥\\',\\n                age: 32,\\n                address: \\'西湖区湖底公园1号\\',\\n                phoneLabel: undefined,\\n                phoneNumber: undefined,\\n              },\\n              {\\n                key: \\'2\\',\\n                name: \\'胡彦祖\\',\\n                nickname: \\'大帅哥\\',\\n                age: 42,\\n                address: \\'西湖区湖底公园1号\\',\\n                phoneLabel: \\'靓号\\',\\n                phoneNumber: \\'18518300669\\',\\n              },\\n            ]}\\n          />\\n        </Skeleton.Node>\\n      </div>\\n      <div>\\n        <Switch checked={loading} onChange={setLoading} />\\n      </div>\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Skeleton,\n      Button,\n      Table,\n      Space,\n      Switch,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [loading, setLoading] = React.useState(true);\n        return <div>\n        <div>button:</div>\n        <div>\n          <Skeleton.Button loading={loading}>\n              <Button mdxType=\"Button\">test</Button>\n            </Skeleton.Button>\n        </div>\n        <div>node:</div>\n        <div>\n          <Skeleton.Node loading={loading}>\n            <Button mdxType=\"Button\">test</Button>\n          </Skeleton.Node>\n        </div>\n        <div>\n          <Skeleton.Node loading={loading}>\n            <Table rowKey=\"key\" columns={[{\n                title: '姓名/外号',\n                dataIndex: 'name',\n                width: 200\n              }, {\n                title: '年龄',\n                dataIndex: 'age'\n              }, {\n                title: '住址',\n                dataIndex: 'address'\n              }, {\n                title: '联系方式',\n                dataIndex: 'phoneNumber',\n                width: 200\n              }, {\n                title: 'Action',\n                dataIndex: 'action',\n                align: 'center',\n                width: 200\n              }]} dataSource={[{\n                key: '1',\n                name: '胡彦斌',\n                nickname: '小帅哥',\n                age: 32,\n                address: '西湖区湖底公园1号',\n                phoneLabel: undefined,\n                phoneNumber: undefined\n              }, {\n                key: '2',\n                name: '胡彦祖',\n                nickname: '大帅哥',\n                age: 42,\n                address: '西湖区湖底公园1号',\n                phoneLabel: '靓号',\n                phoneNumber: '18518300669'\n              }]} mdxType=\"Table\" />\n          </Skeleton.Node>\n        </div>\n        <div>\n          <Switch checked={loading} onChange={setLoading} mdxType=\"Switch\" />\n        </div>\n      </div>;\n      }}\n    </Playground>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`属性`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`说明`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`自定义 CSS className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`style`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`自定义内联样式`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`CSSProperties`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}