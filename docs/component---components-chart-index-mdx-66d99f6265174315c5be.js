(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{zXNu:function(t,e,a){"use strict";a.r(e),a.d(e,"_frontmatter",(function(){return O})),a.d(e,"default",(function(){return g}));var n=a("Fcif"),l=(a("wl/M"),a("DrYe")),r=(a("Cj4V"),a("PF8s")),b=a("+I+c"),m=a("mXGw"),i=a("/FXl"),c=a("TjRS"),p=a("ZFoC"),u=a("8Lo2"),d=(a("aD51"),["components"]),O={};void 0!==O&&O&&O===Object(O)&&Object.isExtensible(O)&&!Object.prototype.hasOwnProperty.call(O,"__filemeta")&&Object.defineProperty(O,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"components/chart/index.mdx"}});var j={_frontmatter:O},N=c.a;function g(t){var e,a,g=t.components,o=Object(b.a)(t,d);return Object(i.b)(N,Object(n.a)({},j,o,{components:g,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"chart-图表"},"Chart 图表"),Object(i.b)("h1",{id:"何时使用"},"何时使用"),Object(i.b)("h2",{id:"基本用法"},"基本用法"),Object(i.b)("h3",{id:"mixlinebarchart-混合折线柱状图"},"MixLineBarChart 混合折线柱状图"),Object(i.b)(p.c,{__position:0,__code:"() => {\n  const [data] = React.useState(\n    Array.from(Array(100)).map((_, i) => {\n      const n1 = Math.random()\n      const n2 = Math.random()\n      return {\n        date: Date.now() + i * 5 * 60 * 1000,\n        in: generateRandomNum({\n          min: 9000,\n          max: 12000,\n        }),\n        out: generateRandomNum({\n          min: 6000,\n          max: 8000,\n        }),\n        mm: generateRandomNum({\n          min: 4000,\n          max: 6000,\n        }),\n      }\n    }),\n  )\n  return (\n    <Chart.MixLineBarChart\n      xAxis={{\n        key: 'date',\n      }}\n      yAxis={{\n        unit: 'bps',\n      }}\n      series={[\n        { name: 'IN', key: 'in', type: 'line' },\n        { name: 'OUT', key: 'out', type: 'line' },\n        { name: 'MM', key: 'mm', type: 'bar' },\n      ]}\n      legend={[\n        {\n          key: 'in',\n          columns: [\n            { label: 'Maximum', value: '280Mbps' },\n            { label: 'Minimum', value: '100Mbps' },\n            { label: 'Total', value: '1000Mbps' },\n          ],\n        },\n        {\n          key: 'out',\n          name: 'Custom name OUT',\n          columns: [\n            { label: 'Maximum', value: '280Mbps' },\n            {},\n            { label: 'Minimum', value: '100Mbps' },\n          ],\n        },\n        {\n          key: 'mm',\n        },\n      ]}\n      data={data}\n    />\n  )\n}",__scope:(e={props:o,DefaultLayout:c.a,Playground:p.c,Props:p.d,Chart:r.a,Button:l.a,generateRandomNum:u.c},e.DefaultLayout=c.a,e._frontmatter=O,e),mdxType:"Playground"},(function(){var t=m.useState(Array.from(Array(100)).map((function(t,e){Math.random(),Math.random();return{date:Date.now()+5*e*60*1e3,in:Object(u.c)({min:9e3,max:12e3}),out:Object(u.c)({min:6e3,max:8e3}),mm:Object(u.c)({min:4e3,max:6e3})}})))[0];return Object(i.b)(r.a.MixLineBarChart,{xAxis:{key:"date"},yAxis:{unit:"bps"},series:[{name:"IN",key:"in",type:"line"},{name:"OUT",key:"out",type:"line"},{name:"MM",key:"mm",type:"bar"}],legend:[{key:"in",columns:[{label:"Maximum",value:"280Mbps"},{label:"Minimum",value:"100Mbps"},{label:"Total",value:"1000Mbps"}]},{key:"out",name:"Custom name OUT",columns:[{label:"Maximum",value:"280Mbps"},{},{label:"Minimum",value:"100Mbps"}]},{key:"mm"}],data:t})})),Object(i.b)("h3",{id:"minilinechart-极简折线图"},"MiniLineChart 极简折线图"),Object(i.b)(p.c,{__position:1,__code:"() => {\n  const [data] = React.useState(\n    Array.from(Array(100)).map((_, i) => {\n      const n1 = Math.random()\n      const n2 = Math.random()\n      return {\n        date: Date.now() + i * 5 * 60 * 1000,\n        in: generateRandomNum({\n          min: 2500,\n          max: 4000,\n        }),\n        out: generateRandomNum({\n          min: 1000,\n          max: 2500,\n        }),\n      }\n    }),\n  )\n  return (\n    <Chart.MiniLineChart\n      xAxisKey=\"date\"\n      series={[\n        { name: 'IN', key: 'in' },\n        { name: 'OUT', key: 'out' },\n      ]}\n      data={data}\n    />\n  )\n}",__scope:(a={props:o,DefaultLayout:c.a,Playground:p.c,Props:p.d,Chart:r.a,Button:l.a,generateRandomNum:u.c},a.DefaultLayout=c.a,a._frontmatter=O,a),mdxType:"Playground"},(function(){var t=m.useState(Array.from(Array(100)).map((function(t,e){Math.random(),Math.random();return{date:Date.now()+5*e*60*1e3,in:Object(u.c)({min:2500,max:4e3}),out:Object(u.c)({min:1e3,max:2500})}})))[0];return Object(i.b)(r.a.MiniLineChart,{xAxisKey:"date",series:[{name:"IN",key:"in"},{name:"OUT",key:"out"}],data:t})})),Object(i.b)("h2",{id:"api"},"API"),Object(i.b)("h3",{id:"mixlinebarchart"},"MixLineBarChart"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"属性"),Object(i.b)("th",{parentName:"tr",align:null},"说明"),Object(i.b)("th",{parentName:"tr",align:null},"类型"),Object(i.b)("th",{parentName:"tr",align:null},"默认值"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"xAxis.key"),Object(i.b)("td",{parentName:"tr",align:null},"x 轴数据的 key"),Object(i.b)("td",{parentName:"tr",align:null},"string"),Object(i.b)("td",{parentName:"tr",align:null},"-")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"xAxis.type"),Object(i.b)("td",{parentName:"tr",align:null},"x 轴数据的类型，time 类型会自动格式化"),Object(i.b)("td",{parentName:"tr",align:null},"'time' ","|"," 'category'"),Object(i.b)("td",{parentName:"tr",align:null},"'time'")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"xAxis.formatter"),Object(i.b)("td",{parentName:"tr",align:null},"x 轴刻度标签自定义格式"),Object(i.b)("td",{parentName:"tr",align:null},"(value: string) => string ","|"," number"),Object(i.b)("td",{parentName:"tr",align:null},"-")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"yAxis.unit"),Object(i.b)("td",{parentName:"tr",align:null},"y 轴数据的单位"),Object(i.b)("td",{parentName:"tr",align:null},"string"),Object(i.b)("td",{parentName:"tr",align:null},"-")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"yAxis.type"),Object(i.b)("td",{parentName:"tr",align:null},"y 轴数据的类型，bigValue 类型会自动格式化"),Object(i.b)("td",{parentName:"tr",align:null},"'value' ","|"," 'bigValue'"),Object(i.b)("td",{parentName:"tr",align:null},"'bigValue'")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"yAxis.formatter"),Object(i.b)("td",{parentName:"tr",align:null},"y 轴刻度标签自定义格式"),Object(i.b)("td",{parentName:"tr",align:null},"(value: number) => string ","|"," number"),Object(i.b)("td",{parentName:"tr",align:null},"-")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"data"),Object(i.b)("td",{parentName:"tr",align:null},"数据"),Object(i.b)("td",{parentName:"tr",align:null},"any[]"),Object(i.b)("td",{parentName:"tr",align:null},"-")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"series"),Object(i.b)("td",{parentName:"tr",align:null},"系列配置"),Object(i.b)("td",{parentName:"tr",align:null},"MixLineBarChartSeries[]"),Object(i.b)("td",{parentName:"tr",align:null},"-")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"legend"),Object(i.b)("td",{parentName:"tr",align:null},"图例配置"),Object(i.b)("td",{parentName:"tr",align:null},"boolean ","|"," MixLineBarChartLegend[]"),Object(i.b)("td",{parentName:"tr",align:null},"-")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"showDataZoom"),Object(i.b)("td",{parentName:"tr",align:null},"是否显示区域缩放"),Object(i.b)("td",{parentName:"tr",align:null},"boolean"),Object(i.b)("td",{parentName:"tr",align:null},"true")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"showTooltip"),Object(i.b)("td",{parentName:"tr",align:null},"是否显示 tooltip"),Object(i.b)("td",{parentName:"tr",align:null},"boolean"),Object(i.b)("td",{parentName:"tr",align:null},"true")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"width"),Object(i.b)("td",{parentName:"tr",align:null},"宽度"),Object(i.b)("td",{parentName:"tr",align:null},"string ","|"," number"),Object(i.b)("td",{parentName:"tr",align:null},"'100%'")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"height"),Object(i.b)("td",{parentName:"tr",align:null},"高度"),Object(i.b)("td",{parentName:"tr",align:null},"string ","|"," number"),Object(i.b)("td",{parentName:"tr",align:null},"'400px'")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"className"),Object(i.b)("td",{parentName:"tr",align:null},"自定义 CSS className"),Object(i.b)("td",{parentName:"tr",align:null},"string"),Object(i.b)("td",{parentName:"tr",align:null},"-")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"style"),Object(i.b)("td",{parentName:"tr",align:null},"自定义内联样式"),Object(i.b)("td",{parentName:"tr",align:null},"React.CSSProperties"),Object(i.b)("td",{parentName:"tr",align:null},"-")))),Object(i.b)("h4",{id:"mixlinebarchartseries"},"MixLineBarChartSeries"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"属性"),Object(i.b)("th",{parentName:"tr",align:null},"说明"),Object(i.b)("th",{parentName:"tr",align:null},"类型"),Object(i.b)("th",{parentName:"tr",align:null},"默认值"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"name"),Object(i.b)("td",{parentName:"tr",align:null},"名称"),Object(i.b)("td",{parentName:"tr",align:null},"string"),Object(i.b)("td",{parentName:"tr",align:null},"-")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"key"),Object(i.b)("td",{parentName:"tr",align:null},"y 轴数据的 key"),Object(i.b)("td",{parentName:"tr",align:null},"string"),Object(i.b)("td",{parentName:"tr",align:null},"-")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"type"),Object(i.b)("td",{parentName:"tr",align:null},"显示成柱状图或折线图"),Object(i.b)("td",{parentName:"tr",align:null},"'line' ","|"," 'bar'"),Object(i.b)("td",{parentName:"tr",align:null},"'line'")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"lineType"),Object(i.b)("td",{parentName:"tr",align:null},"折线类型，markLine 会显示成 1px 的白色虚线"),Object(i.b)("td",{parentName:"tr",align:null},"'normal' ","|"," 'markLine'"),Object(i.b)("td",{parentName:"tr",align:null},"'normal'")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"color"),Object(i.b)("td",{parentName:"tr",align:null},"颜色（如果为空，会按顺序自动分配颜色）"),Object(i.b)("td",{parentName:"tr",align:null},"ChartColors"),Object(i.b)("td",{parentName:"tr",align:null},"-")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"smooth"),Object(i.b)("td",{parentName:"tr",align:null},"是否使用曲线（开启后数据量较大时，tooltip 会有卡顿）"),Object(i.b)("td",{parentName:"tr",align:null},"boolean"),Object(i.b)("td",{parentName:"tr",align:null},"false")))),Object(i.b)("h4",{id:"mixlinebarchartlegend"},"MixLineBarChartLegend"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"属性"),Object(i.b)("th",{parentName:"tr",align:null},"说明"),Object(i.b)("th",{parentName:"tr",align:null},"类型"),Object(i.b)("th",{parentName:"tr",align:null},"默认值"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"name"),Object(i.b)("td",{parentName:"tr",align:null},"名称（如果不传会使用 series 中的 name）"),Object(i.b)("td",{parentName:"tr",align:null},"string"),Object(i.b)("td",{parentName:"tr",align:null},"-")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"key"),Object(i.b)("td",{parentName:"tr",align:null},"对应 series 中的 key"),Object(i.b)("td",{parentName:"tr",align:null},"string"),Object(i.b)("td",{parentName:"tr",align:null},"-")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"columns"),Object(i.b)("td",{parentName:"tr",align:null},"额外的列"),Object(i.b)("td",{parentName:"tr",align:null},"{ label: React.ReactNode; value: React.ReactNode }[]"),Object(i.b)("td",{parentName:"tr",align:null},"-")))),Object(i.b)("h3",{id:"minilinechart"},"MiniLineChart"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"属性"),Object(i.b)("th",{parentName:"tr",align:null},"说明"),Object(i.b)("th",{parentName:"tr",align:null},"类型"),Object(i.b)("th",{parentName:"tr",align:null},"默认值"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"xAxisKey"),Object(i.b)("td",{parentName:"tr",align:null},"x 轴数据的 key"),Object(i.b)("td",{parentName:"tr",align:null},"string"),Object(i.b)("td",{parentName:"tr",align:null},"-")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"data"),Object(i.b)("td",{parentName:"tr",align:null},"数据"),Object(i.b)("td",{parentName:"tr",align:null},"any[]"),Object(i.b)("td",{parentName:"tr",align:null},"-")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"series"),Object(i.b)("td",{parentName:"tr",align:null},"系列配置"),Object(i.b)("td",{parentName:"tr",align:null},"MiniLineChartSeries[]"),Object(i.b)("td",{parentName:"tr",align:null},"-")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"width"),Object(i.b)("td",{parentName:"tr",align:null},"宽度"),Object(i.b)("td",{parentName:"tr",align:null},"string ","|"," number"),Object(i.b)("td",{parentName:"tr",align:null},"'100%'")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"height"),Object(i.b)("td",{parentName:"tr",align:null},"高度"),Object(i.b)("td",{parentName:"tr",align:null},"string ","|"," number"),Object(i.b)("td",{parentName:"tr",align:null},"'400px'")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"className"),Object(i.b)("td",{parentName:"tr",align:null},"自定义 CSS className"),Object(i.b)("td",{parentName:"tr",align:null},"string"),Object(i.b)("td",{parentName:"tr",align:null},"-")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"style"),Object(i.b)("td",{parentName:"tr",align:null},"自定义内联样式"),Object(i.b)("td",{parentName:"tr",align:null},"React.CSSProperties"),Object(i.b)("td",{parentName:"tr",align:null},"-")))),Object(i.b)("h4",{id:"minilinechartseries"},"MiniLineChartSeries"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"属性"),Object(i.b)("th",{parentName:"tr",align:null},"说明"),Object(i.b)("th",{parentName:"tr",align:null},"类型"),Object(i.b)("th",{parentName:"tr",align:null},"默认值"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"name"),Object(i.b)("td",{parentName:"tr",align:null},"名称"),Object(i.b)("td",{parentName:"tr",align:null},"string"),Object(i.b)("td",{parentName:"tr",align:null},"-")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"key"),Object(i.b)("td",{parentName:"tr",align:null},"y 轴数据的 key"),Object(i.b)("td",{parentName:"tr",align:null},"string"),Object(i.b)("td",{parentName:"tr",align:null},"-")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"lineType"),Object(i.b)("td",{parentName:"tr",align:null},"折线类型，markLine 会显示成 1px 的白色虚线"),Object(i.b)("td",{parentName:"tr",align:null},"'normal' ","|"," 'markLine'"),Object(i.b)("td",{parentName:"tr",align:null},"'normal'")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"show"),Object(i.b)("td",{parentName:"tr",align:null},"是否显示"),Object(i.b)("td",{parentName:"tr",align:null},"boolean"),Object(i.b)("td",{parentName:"tr",align:null},"true")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"color"),Object(i.b)("td",{parentName:"tr",align:null},"颜色（如果为空，会按顺序自动分配颜色）"),Object(i.b)("td",{parentName:"tr",align:null},"ChartColors"),Object(i.b)("td",{parentName:"tr",align:null},"-")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"smooth"),Object(i.b)("td",{parentName:"tr",align:null},"是否使用曲线"),Object(i.b)("td",{parentName:"tr",align:null},"boolean"),Object(i.b)("td",{parentName:"tr",align:null},"false")))))}void 0!==g&&g&&g===Object(g)&&Object.isExtensible(g)&&!Object.prototype.hasOwnProperty.call(g,"__filemeta")&&Object.defineProperty(g,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"components/chart/index.mdx"}}),g.isMDXComponent=!0}}]);
//# sourceMappingURL=component---components-chart-index-mdx-66d99f6265174315c5be.js.map