{"version":3,"sources":["webpack:///../components/table/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","Table","Button","Dropdown","Menu","Icon","Space","Switch","Text","Help","filterDropdownRender","singleFilterDropdownRender","filterIconRender","expandIconRender","useSetColumn","SetColumnButton","AttachSelect","NameIdSpace","rowKey","columns","title","dataIndex","width","render","v","r","isEditStyle","name","editable","inputWidth","onCheck","value","console","log","id","nickname","placeholder","disabled","disabledTip","defaultValue","phoneLabel","phoneNumber","undefined","onChange","Option","isLinkStyle","dataSource","key","age","address","selection","type","keys","rows","operation","selectedRowKeys","selectedRows","size","onClick","danger","React","setselection","direction","style","defaultSelectedRowKeys","filters","text","filterDropdown","filterIcon","onFilter","record","includes","pagination","sorter","defaultSortOrder","a","b","tips","description","expandable","expandedRowRender","expandIcon","loading","scroll","x","fixed","columnsOpts","defaultChecked","userUid","version","Group","icon","parentName","isMDXComponent"],"mappings":"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","file":"component---components-table-index-mdx-b58b0bd7d3fd05d7872b.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/zenlayer/Documents/HZ_FE/zen-design/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Table, Button, Dropdown, Menu, Icon, Space, Switch, Text } from '@zenlayer/zen-design'; // 引入组件\n\nimport { Help, filterDropdownRender, singleFilterDropdownRender, filterIconRender, expandIconRender, useSetColumn, SetColumnButton, AttachSelect, NameIdSpace } from './index.ts';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"table-表格\"\n    }}>{`Table 表格`}</h1>\n    <h2 {...{\n      \"id\": \"何时使用\"\n    }}>{`何时使用`}</h2>\n    <p>{`当有大量结构化的数据需要展现时；`}</p>\n    <p>{`当需要对数据进行排序、搜索、分页、自定义操作等复杂行为时。`}</p>\n    <h2 {...{\n      \"id\": \"基本用法\"\n    }}>{`基本用法`}</h2>\n    <h3 {...{\n      \"id\": \"最基本的\"\n    }}>{`最基本的`}</h3>\n    <Playground __position={0} __code={'<Table\\n  rowKey=\\\"key\\\"\\n  columns={[\\n    {\\n      title: \\'姓名/外号\\',\\n      dataIndex: \\'name\\',\\n      width: 200,\\n      render: (v, r) => (\\n        <NameIdSpace\\n          isEditStyle\\n          name={\\n            <Text\\n              editable={{\\n                inputWidth: 160,\\n                onCheck: value => {\\n                  console.log(value)\\n                  return true\\n                },\\n              }}\\n            >\\n              {v}\\n            </Text>\\n          }\\n          id={r.nickname}\\n        />\\n      ),\\n    },\\n    {\\n      title: \\'年龄\\',\\n      dataIndex: \\'age\\',\\n      width: 80,\\n    },\\n    {\\n      title: \\'住址\\',\\n      dataIndex: \\'address\\',\\n      width: 200,\\n    },\\n    {\\n      title: \\'联系方式\\',\\n      dataIndex: \\'phoneNumber\\',\\n      width: 200,\\n      render: (v, r) => {\\n        return (\\n          <AttachSelect\\n            placeholder=\\\"Adding a Phone number\\\"\\n            disabled={v === \\'18518300669\\'}\\n            disabledTip=\\\"号码太好不能换\\\"\\n            defaultValue={\\n              r.phoneLabel && r.phoneNumber\\n                ? { name: r.phoneLabel, id: r.phoneNumber }\\n                : undefined\\n            }\\n            onChange={v => {\\n              console.log(v)\\n            }}\\n          >\\n            <AttachSelect.Option value={\\'18888888888\\'} name=\\\"靓号\\\">\\n              <NameIdSpace isLinkStyle name=\\\"靓号\\\" id=\\\"18888888888\\\" />\\n            </AttachSelect.Option>\\n            <AttachSelect.Option value={\\'17777777777\\'} name=\\\"靓号2\\\">\\n              <NameIdSpace isLinkStyle name=\\\"靓号2\\\" id=\\\"17777777777\\\" />\\n            </AttachSelect.Option>\\n            <AttachSelect.Option value={\\'19999999999\\'} name=\\\"靓号3\\\">\\n              <NameIdSpace isLinkStyle name=\\\"靓号3\\\" id=\\\"19999999999\\\" />\\n            </AttachSelect.Option>\\n          </AttachSelect>\\n        )\\n      },\\n    },\\n  ]}\\n  dataSource={[\\n    {\\n      key: \\'1\\',\\n      name: \\'胡彦斌\\',\\n      nickname: \\'小帅哥\\',\\n      age: 32,\\n      address: \\'西湖区湖底公园1号\\',\\n      phoneLabel: undefined,\\n      phoneNumber: undefined,\\n    },\\n    {\\n      key: \\'2\\',\\n      name: \\'胡彦祖\\',\\n      nickname: \\'大帅哥\\',\\n      age: 42,\\n      address: \\'西湖区湖底公园1号\\',\\n      phoneLabel: \\'靓号\\',\\n      phoneNumber: \\'18518300669\\',\\n    },\\n  ]}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Table,\n      Button,\n      Dropdown,\n      Menu,\n      Icon,\n      Space,\n      Switch,\n      Text,\n      Help,\n      filterDropdownRender,\n      singleFilterDropdownRender,\n      filterIconRender,\n      expandIconRender,\n      useSetColumn,\n      SetColumnButton,\n      AttachSelect,\n      NameIdSpace,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Table rowKey=\"key\" columns={[{\n        title: '姓名/外号',\n        dataIndex: 'name',\n        width: 200,\n        render: (v, r) => <NameIdSpace isEditStyle name={<Text editable={{\n          inputWidth: 160,\n          onCheck: value => {\n            console.log(value);\n            return true;\n          }\n        }} mdxType=\"Text\">\n              {v}\n            </Text>} id={r.nickname} mdxType=\"NameIdSpace\" />\n      }, {\n        title: '年龄',\n        dataIndex: 'age',\n        width: 80\n      }, {\n        title: '住址',\n        dataIndex: 'address',\n        width: 200\n      }, {\n        title: \"联系方式\",\n        dataIndex: \"phoneNumber\",\n        width: 200,\n        render: (v, r) => {\n          return <AttachSelect placeholder=\"Adding a Phone number\" disabled={v === \"18518300669\"} disabledTip=\"号码太好不能换\" defaultValue={r.phoneLabel && r.phoneNumber ? {\n            name: r.phoneLabel,\n            id: r.phoneNumber\n          } : undefined} onChange={v => {\n            console.log(v);\n          }} mdxType=\"AttachSelect\">\n            <AttachSelect.Option value={'18888888888'} name=\"靓号\">\n              <NameIdSpace isLinkStyle name=\"靓号\" id=\"18888888888\" mdxType=\"NameIdSpace\" />\n            </AttachSelect.Option>\n            <AttachSelect.Option value={'17777777777'} name=\"靓号2\">\n              <NameIdSpace isLinkStyle name=\"靓号2\" id=\"17777777777\" mdxType=\"NameIdSpace\" />\n            </AttachSelect.Option>\n            <AttachSelect.Option value={'19999999999'} name=\"靓号3\">\n              <NameIdSpace isLinkStyle name=\"靓号3\" id=\"19999999999\" mdxType=\"NameIdSpace\" />\n            </AttachSelect.Option>\n          </AttachSelect>;\n        }\n      }]} dataSource={[{\n        key: '1',\n        name: '胡彦斌',\n        nickname: \"小帅哥\",\n        age: 32,\n        address: '西湖区湖底公园1号',\n        phoneLabel: undefined,\n        phoneNumber: undefined\n      }, {\n        key: '2',\n        name: '胡彦祖',\n        nickname: \"大帅哥\",\n        age: 42,\n        address: '西湖区湖底公园1号',\n        phoneLabel: \"靓号\",\n        phoneNumber: \"18518300669\"\n      }]} mdxType=\"Table\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"多选\"\n    }}>{`多选`}</h3>\n    <Playground __position={1} __code={'<Table\\n  rowKey=\\\"key\\\"\\n  columns={[\\n    {\\n      title: \\'姓名\\',\\n      dataIndex: \\'name\\',\\n    },\\n    {\\n      title: \\'年龄\\',\\n      dataIndex: \\'age\\',\\n    },\\n    {\\n      title: \\'住址\\',\\n      dataIndex: \\'address\\',\\n    },\\n  ]}\\n  dataSource={[\\n    {\\n      key: \\'1\\',\\n      name: \\'胡彦斌\\',\\n      age: 32,\\n      address: \\'西湖区湖底公园1号\\',\\n    },\\n    {\\n      key: \\'2\\',\\n      name: \\'胡彦祖\\',\\n      age: 42,\\n      address: \\'西湖区湖底公园1号\\',\\n    },\\n  ]}\\n  selection={{\\n    type: \\'checkbox\\',\\n    onChange: (keys, rows) => {\\n      console.log(keys, rows)\\n    },\\n    operation: (selectedRowKeys, selectedRows) => [\\n      <Button\\n        key=\\\"1\\\"\\n        size=\\\"s\\\"\\n        type=\\\"normal\\\"\\n        onClick={() => {\\n          console.log(selectedRowKeys, selectedRows)\\n        }}\\n        danger\\n      >\\n        Delete\\n      </Button>,\\n    ],\\n  }}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Table,\n      Button,\n      Dropdown,\n      Menu,\n      Icon,\n      Space,\n      Switch,\n      Text,\n      Help,\n      filterDropdownRender,\n      singleFilterDropdownRender,\n      filterIconRender,\n      expandIconRender,\n      useSetColumn,\n      SetColumnButton,\n      AttachSelect,\n      NameIdSpace,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Table rowKey=\"key\" columns={[{\n        title: '姓名',\n        dataIndex: 'name'\n      }, {\n        title: '年龄',\n        dataIndex: 'age'\n      }, {\n        title: '住址',\n        dataIndex: 'address'\n      }]} dataSource={[{\n        key: '1',\n        name: '胡彦斌',\n        age: 32,\n        address: '西湖区湖底公园1号'\n      }, {\n        key: '2',\n        name: '胡彦祖',\n        age: 42,\n        address: '西湖区湖底公园1号'\n      }]} selection={{\n        type: 'checkbox',\n        onChange: (keys, rows) => {\n          console.log(keys, rows);\n        },\n        operation: (selectedRowKeys, selectedRows) => [<Button key=\"1\" size=\"s\" type=\"normal\" onClick={() => {\n          console.log(selectedRowKeys, selectedRows);\n        }} danger mdxType=\"Button\">\n          Delete\n        </Button>]\n      }} mdxType=\"Table\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"单选\"\n    }}>{`单选`}</h3>\n    <Playground __position={2} __code={'() => {\\n  const [selection, setselection] = React.useState(undefined)\\n  return (\\n    <Space direction=\\\"vertical\\\" style={{ width: \\'100%\\' }}>\\n      <Switch\\n        onChange={v => {\\n          if (v) {\\n            setselection({\\n              type: \\'radio\\',\\n              defaultSelectedRowKeys: [\\'1\\'],\\n            })\\n          } else {\\n            setselection(undefined)\\n          }\\n        }}\\n      />\\n      <Table\\n        rowKey=\\\"key\\\"\\n        columns={[\\n          {\\n            title: \\'姓名\\',\\n            dataIndex: \\'name\\',\\n          },\\n          {\\n            title: \\'年龄\\',\\n            dataIndex: \\'age\\',\\n          },\\n          {\\n            title: \\'住址\\',\\n            dataIndex: \\'address\\',\\n          },\\n        ]}\\n        dataSource={[\\n          {\\n            key: \\'1\\',\\n            name: \\'胡彦斌\\',\\n            age: 32,\\n            address: \\'西湖区湖底公园1号\\',\\n          },\\n          {\\n            key: \\'2\\',\\n            name: \\'胡彦祖\\',\\n            age: 42,\\n            address: \\'西湖区湖底公园1号\\',\\n          },\\n        ]}\\n        selection={selection}\\n      />\\n    </Space>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Table,\n      Button,\n      Dropdown,\n      Menu,\n      Icon,\n      Space,\n      Switch,\n      Text,\n      Help,\n      filterDropdownRender,\n      singleFilterDropdownRender,\n      filterIconRender,\n      expandIconRender,\n      useSetColumn,\n      SetColumnButton,\n      AttachSelect,\n      NameIdSpace,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [selection, setselection] = React.useState(undefined);\n        return <Space direction=\"vertical\" style={{\n          width: '100%'\n        }} mdxType=\"Space\">\n        <Switch onChange={v => {\n            if (v) {\n              setselection({\n                type: 'radio',\n                defaultSelectedRowKeys: ['1']\n              });\n            } else {\n              setselection(undefined);\n            }\n          }} mdxType=\"Switch\" />\n        <Table rowKey=\"key\" columns={[{\n            title: '姓名',\n            dataIndex: 'name'\n          }, {\n            title: '年龄',\n            dataIndex: 'age'\n          }, {\n            title: '住址',\n            dataIndex: 'address'\n          }]} dataSource={[{\n            key: '1',\n            name: '胡彦斌',\n            age: 32,\n            address: '西湖区湖底公园1号'\n          }, {\n            key: '2',\n            name: '胡彦祖',\n            age: 42,\n            address: '西湖区湖底公园1号'\n          }]} selection={selection} mdxType=\"Table\" />\n      </Space>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"筛选\"\n    }}>{`筛选`}</h3>\n    <Playground __position={3} __code={'<Table\\n  rowKey=\\\"key\\\"\\n  columns={[\\n    {\\n      title: \\'姓名\\',\\n      dataIndex: \\'name\\',\\n      filters: [\\n        { text: \\'胡彦斌\\', value: \\'胡彦斌\\' },\\n        { text: \\'胡彦祖\\', value: \\'胡彦祖\\' },\\n      ],\\n      filterDropdown: filterDropdownRender, // singleFilterDropdownRender 单选使用这个render，但需要注意，及时单选filterValue也是数组，注意赋值以及onChange时候的转换，尤其是从url.search上获取的\\n      filterIcon: filterIconRender,\\n      onFilter: (value, record) => {\\n        console.log(value, record)\\n        return record.name.includes(value)\\n      },\\n    },\\n    {\\n      title: \\'年龄\\',\\n      dataIndex: \\'age\\',\\n    },\\n    {\\n      title: \\'住址\\',\\n      dataIndex: \\'address\\',\\n    },\\n  ]}\\n  dataSource={[\\n    {\\n      key: \\'1\\',\\n      name: \\'胡彦斌\\',\\n      age: 32,\\n      address: \\'西湖区湖底公园1号\\',\\n    },\\n    {\\n      key: \\'2\\',\\n      name: \\'胡彦祖\\',\\n      age: 42,\\n      address: \\'西湖区湖底公园1号\\',\\n    },\\n  ]}\\n  onChange={(pagination, filters, sorter) => {\\n    console.log(pagination, filters, sorter) //后端接口筛选可用此方法，不写onFilter\\n  }}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Table,\n      Button,\n      Dropdown,\n      Menu,\n      Icon,\n      Space,\n      Switch,\n      Text,\n      Help,\n      filterDropdownRender,\n      singleFilterDropdownRender,\n      filterIconRender,\n      expandIconRender,\n      useSetColumn,\n      SetColumnButton,\n      AttachSelect,\n      NameIdSpace,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Table rowKey=\"key\" columns={[{\n        title: '姓名',\n        dataIndex: 'name',\n        filters: [{\n          text: '胡彦斌',\n          value: '胡彦斌'\n        }, {\n          text: '胡彦祖',\n          value: '胡彦祖'\n        }],\n        filterDropdown: filterDropdownRender,\n        // singleFilterDropdownRender 单选使用这个render，但需要注意，及时单选filterValue也是数组，注意赋值以及onChange时候的转换，尤其是从url.search上获取的\n        filterIcon: filterIconRender,\n        onFilter: (value, record) => {\n          console.log(value, record);\n          return record.name.includes(value);\n        }\n      }, {\n        title: '年龄',\n        dataIndex: 'age'\n      }, {\n        title: '住址',\n        dataIndex: 'address'\n      }]} dataSource={[{\n        key: '1',\n        name: '胡彦斌',\n        age: 32,\n        address: '西湖区湖底公园1号'\n      }, {\n        key: '2',\n        name: '胡彦祖',\n        age: 42,\n        address: '西湖区湖底公园1号'\n      }]} onChange={(pagination, filters, sorter) => {\n        console.log(pagination, filters, sorter); //后端接口筛选可用此方法，不写onFilter\n      }} mdxType=\"Table\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"排序\"\n    }}>{`排序`}</h3>\n    <Playground __position={4} __code={'<Table\\n  rowKey=\\\"key\\\"\\n  columns={[\\n    {\\n      title: \\'姓名\\',\\n      dataIndex: \\'name\\',\\n    },\\n    {\\n      title: \\'年龄\\',\\n      dataIndex: \\'age\\',\\n      defaultSortOrder: \\'descend\\',\\n      sorter: (a, b) => a.age - b.age,\\n    },\\n    {\\n      title: \\'住址\\',\\n      dataIndex: \\'address\\',\\n    },\\n  ]}\\n  onChange={(pagination, filters, sorter) => {\\n    console.log(pagination, filters, sorter) //后端接口排序可用此方法，sorter设置为true\\n  }}\\n  dataSource={[\\n    {\\n      key: \\'1\\',\\n      name: \\'胡彦斌\\',\\n      age: 32,\\n      address: \\'西湖区湖底公园1号\\',\\n    },\\n    {\\n      key: \\'2\\',\\n      name: \\'胡彦祖\\',\\n      age: 42,\\n      address: \\'西湖区湖底公园1号\\',\\n    },\\n  ]}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Table,\n      Button,\n      Dropdown,\n      Menu,\n      Icon,\n      Space,\n      Switch,\n      Text,\n      Help,\n      filterDropdownRender,\n      singleFilterDropdownRender,\n      filterIconRender,\n      expandIconRender,\n      useSetColumn,\n      SetColumnButton,\n      AttachSelect,\n      NameIdSpace,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Table rowKey=\"key\" columns={[{\n        title: '姓名',\n        dataIndex: 'name'\n      }, {\n        title: '年龄',\n        dataIndex: 'age',\n        defaultSortOrder: 'descend',\n        sorter: (a, b) => a.age - b.age\n      }, {\n        title: '住址',\n        dataIndex: 'address'\n      }]} onChange={(pagination, filters, sorter) => {\n        console.log(pagination, filters, sorter); //后端接口排序可用此方法，sorter设置为true\n      }} dataSource={[{\n        key: '1',\n        name: '胡彦斌',\n        age: 32,\n        address: '西湖区湖底公园1号'\n      }, {\n        key: '2',\n        name: '胡彦祖',\n        age: 42,\n        address: '西湖区湖底公园1号'\n      }]} mdxType=\"Table\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"提示\"\n    }}>{`提示`}</h3>\n    <Playground __position={5} __code={'<Table\\n  rowKey=\\\"key\\\"\\n  columns={[\\n    {\\n      title: <Help title=\\\"姓名\\\" tips=\\\"这就是简单的姓名\\\" />,\\n      dataIndex: \\'name\\',\\n    },\\n    {\\n      title: \\'年龄\\',\\n      dataIndex: \\'age\\',\\n    },\\n    {\\n      title: \\'住址\\',\\n      dataIndex: \\'address\\',\\n    },\\n  ]}\\n  dataSource={[\\n    {\\n      key: \\'1\\',\\n      name: \\'胡彦斌\\',\\n      age: 32,\\n      address: \\'西湖区湖底公园1号\\',\\n    },\\n    {\\n      key: \\'2\\',\\n      name: \\'胡彦祖\\',\\n      age: 42,\\n      address: \\'西湖区湖底公园1号\\',\\n    },\\n  ]}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Table,\n      Button,\n      Dropdown,\n      Menu,\n      Icon,\n      Space,\n      Switch,\n      Text,\n      Help,\n      filterDropdownRender,\n      singleFilterDropdownRender,\n      filterIconRender,\n      expandIconRender,\n      useSetColumn,\n      SetColumnButton,\n      AttachSelect,\n      NameIdSpace,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Table rowKey=\"key\" columns={[{\n        title: <Help title=\"姓名\" tips=\"这就是简单的姓名\" mdxType=\"Help\" />,\n        dataIndex: 'name'\n      }, {\n        title: '年龄',\n        dataIndex: 'age'\n      }, {\n        title: '住址',\n        dataIndex: 'address'\n      }]} dataSource={[{\n        key: '1',\n        name: '胡彦斌',\n        age: 32,\n        address: '西湖区湖底公园1号'\n      }, {\n        key: '2',\n        name: '胡彦祖',\n        age: 42,\n        address: '西湖区湖底公园1号'\n      }]} mdxType=\"Table\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"expanded\"\n    }}>{`Expanded`}</h3>\n    <Playground __position={6} __code={'<Table\\n  rowKey=\\\"key\\\"\\n  columns={[\\n    {\\n      title: \\'姓名\\',\\n      dataIndex: \\'name\\',\\n    },\\n    {\\n      title: \\'年龄\\',\\n      dataIndex: \\'age\\',\\n    },\\n    {\\n      title: \\'住址\\',\\n      dataIndex: \\'address\\',\\n    },\\n  ]}\\n  dataSource={[\\n    {\\n      key: \\'1\\',\\n      name: \\'胡彦斌\\',\\n      age: 32,\\n      address: \\'西湖区湖底公园1号\\',\\n      description:\\n        \\'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.\\',\\n    },\\n    {\\n      key: \\'2\\',\\n      name: \\'胡彦祖\\',\\n      age: 42,\\n      address: \\'西湖区湖底公园1号\\',\\n      description:\\n        \\'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.\\',\\n    },\\n  ]}\\n  expandable={{\\n    expandedRowRender: record => <span>{record.description}</span>,\\n    expandIcon: expandIconRender,\\n  }}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Table,\n      Button,\n      Dropdown,\n      Menu,\n      Icon,\n      Space,\n      Switch,\n      Text,\n      Help,\n      filterDropdownRender,\n      singleFilterDropdownRender,\n      filterIconRender,\n      expandIconRender,\n      useSetColumn,\n      SetColumnButton,\n      AttachSelect,\n      NameIdSpace,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Table rowKey=\"key\" columns={[{\n        title: '姓名',\n        dataIndex: 'name'\n      }, {\n        title: '年龄',\n        dataIndex: 'age'\n      }, {\n        title: '住址',\n        dataIndex: 'address'\n      }]} dataSource={[{\n        key: '1',\n        name: '胡彦斌',\n        age: 32,\n        address: '西湖区湖底公园1号',\n        description: 'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.'\n      }, {\n        key: '2',\n        name: '胡彦祖',\n        age: 42,\n        address: '西湖区湖底公园1号',\n        description: 'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.'\n      }]} expandable={{\n        expandedRowRender: record => <span>{record.description}</span>,\n        expandIcon: expandIconRender\n      }} mdxType=\"Table\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"空状态--loading\"\n    }}>{`空状态 && Loading`}</h3>\n    <Playground __position={7} __code={'<Table\\n  rowKey=\\\"key\\\"\\n  columns={[\\n    {\\n      title: \\'姓名\\',\\n      dataIndex: \\'name\\',\\n    },\\n    {\\n      title: \\'年龄\\',\\n      dataIndex: \\'age\\',\\n    },\\n    {\\n      title: \\'住址\\',\\n      dataIndex: \\'address\\',\\n    },\\n  ]}\\n  dataSource={[]}\\n  loading\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Table,\n      Button,\n      Dropdown,\n      Menu,\n      Icon,\n      Space,\n      Switch,\n      Text,\n      Help,\n      filterDropdownRender,\n      singleFilterDropdownRender,\n      filterIconRender,\n      expandIconRender,\n      useSetColumn,\n      SetColumnButton,\n      AttachSelect,\n      NameIdSpace,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Table rowKey=\"key\" columns={[{\n        title: '姓名',\n        dataIndex: 'name'\n      }, {\n        title: '年龄',\n        dataIndex: 'age'\n      }, {\n        title: '住址',\n        dataIndex: 'address'\n      }]} dataSource={[]} loading mdxType=\"Table\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"fix-scroll\"\n    }}>{`Fix Scroll`}</h3>\n    <Playground __position={8} __code={'<Table\\n  rowKey=\\\"key\\\"\\n  scroll={{ x: \\'100%\\' }}\\n  columns={[\\n    {\\n      title: \\'姓名\\',\\n      dataIndex: \\'name\\',\\n      width: 200,\\n      fixed: \\'left\\',\\n    },\\n    {\\n      title: \\'年龄\\',\\n      dataIndex: \\'age\\',\\n      width: 200,\\n      fixed: \\'left\\',\\n    },\\n    { title: \\'Column 1\\', dataIndex: \\'address\\', width: 200 },\\n    { title: \\'Column 2\\', dataIndex: \\'address\\', width: 200 },\\n    { title: \\'Column 3\\', dataIndex: \\'address\\', width: 200 },\\n    { title: \\'Column 4\\', dataIndex: \\'address\\', width: 200 },\\n    { title: \\'Column 5\\', dataIndex: \\'address\\', width: 200 },\\n    { title: \\'Column 6\\', dataIndex: \\'address\\', width: 200 },\\n    {\\n      title: \\'住址\\',\\n      dataIndex: \\'address\\',\\n      width: 200,\\n      fixed: \\'right\\',\\n    },\\n  ]}\\n  dataSource={[\\n    {\\n      key: \\'1\\',\\n      name: \\'John Brown\\',\\n      age: 32,\\n      address: \\'New York Park\\',\\n    },\\n    {\\n      key: \\'2\\',\\n      name: \\'Jim Green\\',\\n      age: 40,\\n      address: \\'London Park\\',\\n    },\\n  ]}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Table,\n      Button,\n      Dropdown,\n      Menu,\n      Icon,\n      Space,\n      Switch,\n      Text,\n      Help,\n      filterDropdownRender,\n      singleFilterDropdownRender,\n      filterIconRender,\n      expandIconRender,\n      useSetColumn,\n      SetColumnButton,\n      AttachSelect,\n      NameIdSpace,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Table rowKey=\"key\" scroll={{\n        x: '100%'\n      }} columns={[{\n        title: '姓名',\n        dataIndex: 'name',\n        width: 200,\n        fixed: 'left'\n      }, {\n        title: '年龄',\n        dataIndex: 'age',\n        width: 200,\n        fixed: 'left'\n      }, {\n        title: 'Column 1',\n        dataIndex: 'address',\n        width: 200\n      }, {\n        title: 'Column 2',\n        dataIndex: 'address',\n        width: 200\n      }, {\n        title: 'Column 3',\n        dataIndex: 'address',\n        width: 200\n      }, {\n        title: 'Column 4',\n        dataIndex: 'address',\n        width: 200\n      }, {\n        title: 'Column 5',\n        dataIndex: 'address',\n        width: 200\n      }, {\n        title: 'Column 6',\n        dataIndex: 'address',\n        width: 200\n      }, {\n        title: '住址',\n        dataIndex: 'address',\n        width: 200,\n        fixed: 'right'\n      }]} dataSource={[{\n        key: '1',\n        name: 'John Brown',\n        age: 32,\n        address: 'New York Park'\n      }, {\n        key: '2',\n        name: 'Jim Green',\n        age: 40,\n        address: 'London Park'\n      }]} mdxType=\"Table\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"设置表头\"\n    }}>{`设置表头`}</h3>\n    <Playground __position={9} __code={'() => {\\n  const { columns, ...props } = useSetColumn({\\n    columns: [\\n      {\\n        title: <Help title=\\\"姓名\\\" tips=\\\"这就是简单的姓名\\\" />,\\n        dataIndex: \\'name\\',\\n        columnsOpts: {\\n          title: \\'姓名\\', //当columns.title为ReactNode时，才需要设置此项\\n          disabled: false,\\n          defaultChecked: true,\\n        },\\n      },\\n      {\\n        title: \\'年龄\\',\\n        dataIndex: \\'age\\',\\n        columnsOpts: {\\n          disabled: false,\\n          defaultChecked: false,\\n        },\\n      },\\n      {\\n        title: \\'住址\\',\\n        dataIndex: \\'address\\',\\n        columnsOpts: {\\n          disabled: true,\\n          defaultChecked: true,\\n        },\\n      },\\n    ],\\n    id: \\'table-demo\\',\\n    userUid: \\'string\\',\\n    version: \\'1.0.0\\',\\n  })\\n  return (\\n    <Space direction=\\\"vertical\\\" style={{ width: \\'100%\\' }}>\\n      <Button.Group size=\\\"s\\\">\\n        <SetColumnButton {...props} />\\n        <Button\\n          type=\\\"normal\\\"\\n          icon={<Icon type=\\\"general/Sync\\\" />}\\n          width={56}\\n        />\\n      </Button.Group>\\n      <Table rowKey=\\\"key\\\" columns={columns} dataSource={[]} />\\n    </Space>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Table,\n      Button,\n      Dropdown,\n      Menu,\n      Icon,\n      Space,\n      Switch,\n      Text,\n      Help,\n      filterDropdownRender,\n      singleFilterDropdownRender,\n      filterIconRender,\n      expandIconRender,\n      useSetColumn,\n      SetColumnButton,\n      AttachSelect,\n      NameIdSpace,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const {\n          columns,\n          ...props\n        } = useSetColumn({\n          columns: [{\n            title: <Help title=\"姓名\" tips=\"这就是简单的姓名\" mdxType=\"Help\" />,\n            dataIndex: 'name',\n            columnsOpts: {\n              title: '姓名',\n              //当columns.title为ReactNode时，才需要设置此项\n              disabled: false,\n              defaultChecked: true\n            }\n          }, {\n            title: '年龄',\n            dataIndex: 'age',\n            columnsOpts: {\n              disabled: false,\n              defaultChecked: false\n            }\n          }, {\n            title: '住址',\n            dataIndex: 'address',\n            columnsOpts: {\n              disabled: true,\n              defaultChecked: true\n            }\n          }],\n          id: 'table-demo',\n          userUid: 'string',\n          version: '1.0.0'\n        });\n        return <Space direction=\"vertical\" style={{\n          width: '100%'\n        }} mdxType=\"Space\">\n        <Button.Group size=\"s\">\n          <SetColumnButton {...props} mdxType=\"SetColumnButton\" />\n          <Button type=\"normal\" icon={<Icon type=\"general/Sync\" mdxType=\"Icon\" />} width={56} mdxType=\"Button\" />\n        </Button.Group>\n        <Table rowKey=\"key\" columns={columns} dataSource={[]} mdxType=\"Table\" />\n      </Space>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://ant.design/components/table-cn/\"\n      }}>{`Ant Design Table API`}</a></p>\n    <h3 {...{\n      \"id\": \"tableselection多选单选操作\"\n    }}>{`Table.selection（多选、单选操作）`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`  selection?: {\n    type?: 'checkbox' | 'radio'; //默认checkbox\n    defaultSelectedRowKeys?: string[];\n    onChange?: (selectedRowKeys: string[], selectedRows: T[]) => void;\n    operation?: (\n      selectedRowKeys: string[],\n      selectedRows: T[]\n    ) => React.ReactElement[];\n  };\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"usesetcolumn\"\n    }}>{`useSetColumn`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`    const { columns,  columnsConfig, setColumnsConfig } = useSetColumn({\n      columns: [\n        {\n          title: '姓名',\n          dataIndex: 'name',\n          columnsOpts: {  //在原本的columns里增加了这个配置\n            title:'姓名',  //一般可不传此字段，当columns.title是一个node时，使用这个字段作为展示和记录，默认使用columns.title\n            disabled: false,\n            defaultChecked: true,\n          },\n        },\n        ...\n      ],\n      id: 'table-demo', //应全局唯一\n      userUid: 'string', //绑定在user层面\n      version: '1.0.0', //columns配置更新后更新版本\n    });\n\n    <SetColumnButton columnsConfig={columnsConfig} setColumnsConfig={setColumnsConfig}/> //可以传Button的各种属性，可以放在ButtonGroup下使用\n`}</code></pre>\n    <p>{`注：提供的一些组件、方法从 table 中引入`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import {\n  Help,\n  filterDropdownRender,\n  singleFilterDropdownRender,\n  filterIconRender,\n  expandIconRender,\n  useSetColumn,\n  SetColumnButton,\n} from '@zenlayer/zen-design/esm/table';\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}